{
  "openapi": "3.0.0",
  "info": {
    "title": "RESOURCES",
    "version": "1.0.0",
    "description": "public api"
  },
  "servers": [{ "url": "https://api.katanamrp.com/v1" }],
  "security": [{ "bearerAuth": [] }],
  "components": {
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } }
  },
  "paths": {
    "/additional_costs": {
      "get": {
        "summary": "List all additional costs",
        "tags": ["Additional costs"],
        "description": "Returns a list of additional costs youâ€™ve previously created.",
        "operationId": "getAdditionalCosts",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters additional costs by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters additional costs by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all additional costs",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Shipping",
                      "updated_at": "2023-10-01T10:37:05.085Z",
                      "created_at": "2023-10-21T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/batches": {
      "post": {
        "summary": "Create a batch",
        "tags": ["Batch"],
        "description": "Creates a batch object.",
        "operationId": "createBatch",
        "requestBody": {
          "description": "New batch values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["batch_number", "variant_id"],
                "properties": {
                  "batch_number": { "type": "string" },
                  "expiration_date": { "type": "string" },
                  "batch_created_date": { "type": "string" },
                  "variant_id": { "type": "integer", "maximum": 2147483647 },
                  "batch_barcode": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 40,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch stock created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "batch_number": "BAT-1",
                  "expiration_date": "2020-10-23T10:37:05.085Z",
                  "batch_created_date": "2020-10-23T10:37:05.085Z",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "variant_id": 1,
                  "batch_barcode": "0040"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/batch_stocks": {
      "get": {
        "summary": "List current batch stock",
        "tags": ["Batch"],
        "description": "Returns a list for current batch stock.\n  The inventory is returned in sorted order, base on location_id ASC, variant_id ASC, batch_id DESC.",
        "operationId": "getBatchStock",
        "parameters": [
          {
            "name": "batch_id",
            "required": false,
            "description": "Filters stock by a valid batch id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "batch_number",
            "required": false,
            "description": "Filters stock by a valid batch number",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "location_id",
            "required": false,
            "description": "Filters stock by a valid location id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "variant_id",
            "required": false,
            "description": "Filters stock by a valid variant id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "batch_barcode",
            "required": false,
            "description": "Filter stock by batch barcode",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "batch_created_at_max",
            "required": false,
            "description": "Maximum value for batch_created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "batch_created_at_min",
            "required": false,
            "description": "Minimum value for batch_created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "include_empty",
            "required": false,
            "description": "Include empty batches in result",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List batch stock",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "batch_id": 1109,
                      "batch_number": "B2",
                      "batch_created_date": "2020-09-29T11:40:29.628Z",
                      "expiration_date": "2021-04-30T10:35:00.000Z",
                      "location_id": 1433,
                      "variant_id": 350880,
                      "quantity_in_stock": "10.00000",
                      "batch_barcode": "0317"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/batch_stocks/{batch_id}": {
      "patch": {
        "summary": "Update batch details",
        "tags": ["Batch"],
        "description": "Updates the specified batch details by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged.",
        "operationId": "updateBatchStock",
        "parameters": [
          {
            "name": "batch_id",
            "required": true,
            "description": "Batch id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "batch stock fields to be updated with new values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "batch_number": { "type": "string" },
                  "expiration_date": { "type": "string" },
                  "batch_created_date": { "type": "string" },
                  "batch_barcode": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 40,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch stock updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "batch_number": "BAT-1",
                  "expiration_date": "2020-10-23T10:37:05.085Z",
                  "batch_created_date": "2020-10-23T10:37:05.085Z",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "variant_id": 1,
                  "batch_barcode": "0040"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/bin_locations": {
      "get": {
        "summary": "List all storage bins",
        "tags": ["Storage bin"],
        "description": "Returns a list of storage bins youâ€™ve previously created. \n  The storage bins are returned in sorted order, with the most recent storage bin appearing first.",
        "operationId": "getAllStorageBins",
        "parameters": [
          {
            "name": "location_id",
            "required": false,
            "description": "Filters storage bins by location. By storage bins are returned for all locations",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "bin_name",
            "required": false,
            "description": "Filters storage bins by name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storage bins",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 12345,
                      "name": "Bin-2",
                      "location_id": 12346,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/bin_locations/{id}": {
      "patch": {
        "summary": "Update a storage bin",
        "tags": ["Storage bin"],
        "description": "Updates the specified storage bin by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateDefaultStorageBin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Storage bin id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Storage bin details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["bin_name", "location_id"],
                "properties": { "bin_name": { "type": "string" } }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Storage bin updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 12345,
                  "bin_name": "Bin-2",
                  "location_id": 12346,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a storage bin",
        "tags": ["Storage bin"],
        "description": "Deletes a storage bin by id.",
        "operationId": "deleteStorageBin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Storage bin id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Storage bin deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/factory": {
      "get": {
        "summary": "Retrieve the current factory",
        "tags": ["Factory"],
        "description": "Returns the general information about the factory.",
        "operationId": "getFactory",
        "responses": {
          "200": {
            "description": "Factory",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "legal_address": {
                    "line_1": "Peetri 7",
                    "line_2": "Apartment 1",
                    "city": "Tallinn",
                    "state": "State",
                    "zip": "10411",
                    "country": "Estonia"
                  },
                  "legal_name": "Legal name",
                  "display_name": "Display name",
                  "base_currency_code": "USD",
                  "default_so_delivery_time": "2021-10-13T15:31:48.490Z",
                  "default_po_lead_time": "2021-10-13T15:31:48.490Z",
                  "default_manufacturing_location_id": 1,
                  "default_purchases_location_id": 1,
                  "default_sales_location_id": 1,
                  "inventory_closing_date": "2022-01-28T23:59:59.000Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory": {
      "get": {
        "summary": "List current inventory",
        "tags": ["Inventory"],
        "description": "Returns a list for current inventory. The inventory is returned in sorted order,\n    with the oldest locations appearing first.",
        "operationId": "getAllInventoryPoint",
        "parameters": [
          {
            "name": "location_id",
            "required": false,
            "description": "Filters inventories by a valid location id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "variant_id",
            "required": false,
            "description": "Filters inventories by valid variant ids",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "include_archived",
            "required": false,
            "description": "Includes archived inventories",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["variant", "location"] }
            },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all inventories",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "variant_id": 1,
                      "location_id": 1,
                      "reorder_point": "5.00000",
                      "average_cost": "10.0000000000",
                      "value_in_stock": "70.0000000000",
                      "quantity_in_stock": "7.00000",
                      "quantity_committed": "0.00000",
                      "quantity_expected": "100.00000",
                      "quantity_missing_or_excess": "102.00000",
                      "quantity_potential": "200.00000",
                      "variant": {
                        "id": 1,
                        "sku": "EM",
                        "sales_price": 40,
                        "product_id": 1,
                        "purchase_price": 0,
                        "product_or_material_name": "New Product",
                        "type": "product",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z",
                        "internal_barcode": "0316",
                        "registered_barcode": "0785223088",
                        "supplier_item_codes": ["978-0785223085", "0785223088"],
                        "config_attributes": [
                          { "config_name": "Type", "config_value": "Standard" }
                        ]
                      },
                      "location": {
                        "id": 1,
                        "name": "Main location",
                        "legal_name": "Amazon",
                        "address_id": 1,
                        "address": {
                          "id": 1,
                          "city": "New York",
                          "country": "United States",
                          "line_1": "10 East 20th Example St",
                          "line_2": "",
                          "state": "New York",
                          "zip": "10000"
                        },
                        "is_primary": true,
                        "sales_allowed": true,
                        "manufacturing_allowed": true,
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_movements": {
      "get": {
        "summary": "List all inventory movements",
        "tags": ["Inventory movements"],
        "description": "Returns a list of inventory movements created by your Katana resources.\n   The inventory movements are returned in sorted order, with the most recent movements appearing first.",
        "operationId": "getAllInventoryMovements",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters inventory movements by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "variant_ids",
            "required": false,
            "description": "Filters inventory movements by an array of variant ids",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "location_id",
            "required": false,
            "description": "Filters inventory movements by a location_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "resource_type",
            "required": false,
            "description": "Filters inventory movements by a resource type",
            "schema": {
              "enum": [
                "PurchaseOrderRow",
                "PurchaseOrderRecipeRow",
                "SalesOrderRow",
                "ManufacturingOrderRecipeRow",
                "StockAdjustmentRow",
                "StockTransferRow",
                "ManufacturingOrder",
                "SystemGenerated"
              ]
            },
            "in": "query"
          },
          {
            "name": "resource_id",
            "required": false,
            "description": "Filters inventory movements by a resource_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "caused_by_order_no",
            "required": false,
            "description": "Filters inventory movements by a caused_by_order_no",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "caused_by_resource_id",
            "required": false,
            "description": "Filters inventory movements by a caused_by_resource_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all inventory movements",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "variant_id": 1,
                      "location_id": 1,
                      "resource_type": "PurchaseOrderRow",
                      "resource_id": 1,
                      "caused_by_order_no": "PO-1",
                      "caused_by_resource_id": 1,
                      "movement_date": "2020-10-23T10:37:05.085Z",
                      "quantity_change": 1,
                      "balance_after": 1,
                      "value_per_unit": 1,
                      "value_in_stock_after": 1,
                      "average_cost_after": 1,
                      "rank": 1,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_reorder_points": {
      "post": {
        "summary": "Update the reorder point",
        "tags": ["Inventory"],
        "description": "(Endpoint deprecation, we recommend using safety_stock instead) Updates an itemâ€™s safety stock level in a certain location and variant combination.",
        "operationId": "createInventoryReorderPoint",
        "requestBody": {
          "description": "New inventory reorder point details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["location_id", "variant_id", "value"],
                "properties": {
                  "location_id": { "type": "integer", "maximum": 2147483647 },
                  "variant_id": { "type": "integer", "maximum": 2147483647 },
                  "value": { "type": "number", "maximum": 100000000000000000 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New inventory reorder point created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "variant_id": 1,
                  "location_id": 1,
                  "value": 10,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_safety_stock_levels": {
      "post": {
        "summary": "Update the safety stock level",
        "tags": ["Inventory"],
        "description": "Update an itemâ€™s safety stock level within a certain location and variant combination.",
        "operationId": "createInventorySafetyStockLevel",
        "requestBody": {
          "description": "New inventory safety stock level details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["location_id", "variant_id", "value"],
                "properties": {
                  "location_id": { "type": "integer", "maximum": 2147483647 },
                  "variant_id": { "type": "integer", "maximum": 2147483647 },
                  "value": { "type": "number", "maximum": 100000000000000000 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New inventory safety stock level created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "variant_id": 1,
                  "location_id": 1,
                  "value": 10,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "List all locations",
        "tags": ["Location"],
        "description": "Returns a list of locations youâ€™ve previously created. The locations are returned in sorted order,\n    with the most recent locations appearing first.",
        "operationId": "getAllLocations",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters locations by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters locations by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "legal_name",
            "required": false,
            "description": "Filters locations by a legal_name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "address_id",
            "required": false,
            "description": "Filters locations by an address_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "sales_allowed",
            "required": false,
            "description": "Filters locations by a sales_allowed",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "manufacturing_allowed",
            "required": false,
            "description": "Filters locations by a manufacturing_allowed",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "purchases_allowed",
            "required": false,
            "description": "Filters locations by a purchases_allowed",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "rank",
            "required": false,
            "description": "Filters locations by a rank",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all locations",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Main location",
                      "legal_name": "Amazon",
                      "address_id": 1,
                      "address": {
                        "id": 1,
                        "city": "New York",
                        "country": "United States",
                        "line_1": "10 East 20th Example St",
                        "line_2": "",
                        "state": "New York",
                        "zip": "10000"
                      },
                      "is_primary": true,
                      "sales_allowed": true,
                      "purchase_allowed": true,
                      "manufacturing_allowed": true,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null
                    },
                    {
                      "id": 2,
                      "name": "Secondary location",
                      "legal_name": "Amazon",
                      "address_id": null,
                      "address": null,
                      "is_primary": false,
                      "sales_allowed": false,
                      "purchase_allowed": true,
                      "manufacturing_allowed": false,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Retrieve a location",
        "tags": ["Location"],
        "description": "Retrieves the details of an existing location based on ID.",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Location id",
            "schema": { "type": "number" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Location",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Main location",
                  "legal_name": "Amazon",
                  "address_id": 1,
                  "address": {
                    "id": 1,
                    "city": "New York",
                    "country": "United States",
                    "line_1": "10 East 20th Example St",
                    "line_2": "",
                    "state": "New York",
                    "zip": "10000"
                  },
                  "is_primary": true,
                  "sales_allowed": true,
                  "purchase_allowed": true,
                  "manufacturing_allowed": true,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_orders": {
      "post": {
        "summary": "Create a manufacturing order",
        "tags": ["Manufacturing order"],
        "description": "Creates a new manufacturing order object. Manufacturing order recipe and\n  operation rows are created automatically based on the product recipe and operations.",
        "operationId": "createManufacturingOrder",
        "requestBody": {
          "description": "new manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["order_no", "variant_id", "location_id"],
                "properties": {
                  "status": { "enum": ["NOT_STARTED"], "type": "string" },
                  "order_no": { "type": "string" },
                  "variant_id": { "type": "number" },
                  "location_id": { "type": "number" },
                  "planned_quantity": { "type": "number" },
                  "actual_quantity": { "type": "number" },
                  "order_created_date": { "type": "string" },
                  "production_deadline_date": {
                    "type": "string",
                    "description": "Use only if automatic production deadline calculation for the factory location is switched OFF."
                  },
                  "additional_info": { "type": "string" },
                  "batch_transactions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "quantity": {
                          "maximum": 1000000000000000,
                          "type": "number"
                        },
                        "batch_id": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New manufacturing order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21400,
                  "status": "NOT_STARTED",
                  "order_no": "SO-2 / 1",
                  "variant_id": 1418016,
                  "planned_quantity": 1,
                  "actual_quantity": null,
                  "batch_transactions": [],
                  "location_id": 2327,
                  "order_created_date": "2021-09-01T07:49:29.000Z",
                  "done_date": null,
                  "production_deadline_date": "2021-10-18T08:00:00.000Z",
                  "additional_info": "",
                  "is_linked_to_sales_order": true,
                  "ingredient_availability": "IN_STOCK",
                  "total_cost": 0,
                  "total_actual_time": 0,
                  "total_planned_time": 18000,
                  "sales_order_id": 1,
                  "sales_order_row_id": 1,
                  "sales_order_delivery_deadline": "2021-09-01T07:49:29.813Z",
                  "material_cost": 10,
                  "created_at": "2021-09-01T07:49:29.813Z",
                  "updated_at": "2021-10-15T14:05:47.625Z",
                  "subassemblies_cost": 10,
                  "operations_cost": 10,
                  "deleted_at": null,
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all manufacturing orders",
        "tags": ["Manufacturing order"],
        "description": "Returns a list of manufacturing orders youâ€™ve previously created.\n  The manufacturing orders are returned in sorted order, with the most recent manufacturing orders appearing first.",
        "operationId": "getAllManufacturingOrders",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters manufacturing orders by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "status",
            "required": false,
            "description": "Filters manufacturing orders by a status.",
            "schema": {
              "enum": ["NOT_STARTED", "BLOCKED", "IN_PROGRESS", "DONE"]
            },
            "in": "query"
          },
          {
            "name": "order_no",
            "required": false,
            "description": "Filters manufacturing orders by an order number.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "location_id",
            "required": false,
            "description": "Filters manufacturing orders by location.",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "is_linked_to_sales_order",
            "required": false,
            "description": "Filters based on whether a manufacturing order is linked to a sales order or not.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all materials",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 21400,
                      "status": "NOT_STARTED",
                      "order_no": "SO-2 / 1",
                      "variant_id": 1418016,
                      "planned_quantity": 1,
                      "actual_quantity": null,
                      "batch_transactions": [],
                      "location_id": 2327,
                      "order_created_date": "2021-09-01T07:49:29.000Z",
                      "done_date": null,
                      "production_deadline_date": "2021-10-18T08:00:00.000Z",
                      "additional_info": "",
                      "is_linked_to_sales_order": true,
                      "ingredient_availability": "IN_STOCK",
                      "total_cost": 0,
                      "total_actual_time": 0,
                      "total_planned_time": 18000,
                      "sales_order_id": 1,
                      "sales_order_row_id": 1,
                      "sales_order_delivery_deadline": "2021-09-01T07:49:29.813Z",
                      "material_cost": 10,
                      "created_at": "2021-09-01T07:49:29.813Z",
                      "updated_at": "2021-10-15T14:05:47.625Z",
                      "subassemblies_cost": 10,
                      "operations_cost": 10,
                      "deleted_at": null,
                      "serial_numbers": [
                        {
                          "id": 1,
                          "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                          "serial_number": "SN1",
                          "resource_type": "Production",
                          "resource_id": 2,
                          "transaction_date": "2023-02-10T10:06:14.435Z"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_orders/{id}": {
      "get": {
        "summary": "Retrieve a manufacturing order",
        "tags": ["Manufacturing order"],
        "description": "Retrieves the details of an existing manufacturing order based on ID.",
        "operationId": "getManufacturingOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Manufacturing order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21400,
                  "status": "NOT_STARTED",
                  "order_no": "SO-2 / 1",
                  "variant_id": 1418016,
                  "planned_quantity": 1,
                  "actual_quantity": null,
                  "batch_transactions": [],
                  "location_id": 2327,
                  "order_created_date": "2021-09-01T07:49:29.000Z",
                  "done_date": null,
                  "production_deadline_date": "2021-10-18T08:00:00.000Z",
                  "additional_info": "",
                  "is_linked_to_sales_order": true,
                  "ingredient_availability": "IN_STOCK",
                  "total_cost": 0,
                  "total_actual_time": 0,
                  "total_planned_time": 18000,
                  "sales_order_id": 1,
                  "sales_order_row_id": 1,
                  "sales_order_delivery_deadline": "2021-09-01T07:49:29.813Z",
                  "material_cost": 10,
                  "created_at": "2021-09-01T07:49:29.813Z",
                  "updated_at": "2021-10-15T14:05:47.625Z",
                  "subassemblies_cost": 10,
                  "operations_cost": 10,
                  "deleted_at": null,
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a manufacturing order",
        "tags": ["Manufacturing order"],
        "description": "Updates the specified manufacturing order by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged.",
        "operationId": "updateManufacturingOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "manufacturing order id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["NOT_STARTED", "BLOCKED", "IN_PROGRESS", "DONE"],
                    "description": "Not updatable when manufacturing order status is DONE and location is deleted\n      or manufacturing_allowed is false."
                  },
                  "order_no": {
                    "type": "string",
                    "description": "Not updatable when manufacturing order status is DONE."
                  },
                  "variant_id": {
                    "type": "number",
                    "description": "Not updatable when manufacturing order status is DONE."
                  },
                  "location_id": {
                    "type": "number",
                    "description": "Not updatable when manufacturing order status is DONE."
                  },
                  "planned_quantity": {
                    "type": "number",
                    "description": "Not updatable when manufacturing order status is DONE."
                  },
                  "actual_quantity": {
                    "type": "number",
                    "description": "Not updatable when manufacturing order status is DONE."
                  },
                  "order_created_date": { "type": "string" },
                  "production_deadline_date": {
                    "type": "string",
                    "description": "Use only if automatic production deadline calculation for the factory location is switched OFF.\n      Not updatable when manufacturing order status is DONE.\n Not updatable when manufacturing order status is DONE."
                  },
                  "additional_info": { "type": "string" },
                  "done_date": { "type": "string" },
                  "batch_transactions": {
                    "type": "array",
                    "description": "Not updatable when manufacturing order status is DONE.",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "quantity": {
                          "maximum": 1000000000000000,
                          "type": "number"
                        },
                        "batch_id": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New manufacturing order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21400,
                  "status": "NOT_STARTED",
                  "order_no": "SO-2 / 1",
                  "variant_id": 1418016,
                  "planned_quantity": 1,
                  "actual_quantity": null,
                  "batch_transactions": [],
                  "location_id": 2327,
                  "order_created_date": "2021-09-01T07:49:29.000Z",
                  "done_date": null,
                  "production_deadline_date": "2021-10-18T08:00:00.000Z",
                  "additional_info": "",
                  "is_linked_to_sales_order": true,
                  "ingredient_availability": "IN_STOCK",
                  "total_cost": 0,
                  "total_actual_time": 0,
                  "total_planned_time": 18000,
                  "sales_order_id": 1,
                  "sales_order_row_id": 1,
                  "sales_order_delivery_deadline": "2021-09-01T07:49:29.813Z",
                  "material_cost": 10,
                  "created_at": "2021-09-01T07:49:29.813Z",
                  "updated_at": "2021-10-15T14:05:47.625Z",
                  "subassemblies_cost": 10,
                  "operations_cost": 10,
                  "deleted_at": null,
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a manufacturing order",
        "tags": ["Manufacturing order"],
        "description": "Deletes a single manufacturing order by id.",
        "operationId": "deleteManufacturingOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Manufacturing order deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_make_to_order": {
      "post": {
        "summary": "Create a make-to-order manufacturing order",
        "tags": ["Manufacturing order"],
        "description": "Creates a new manufacturing order object that is linked to a specific sales order row.",
        "operationId": "makeToOrderManufacturingOrder",
        "requestBody": {
          "description": "new manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["sales_order_row_id"],
                "properties": {
                  "sales_order_row_id": { "type": "number" },
                  "create_subassemblies": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New linked manufacturing order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21400,
                  "status": "NOT_STARTED",
                  "order_no": "SO-2 / 1",
                  "variant_id": 1418016,
                  "planned_quantity": 1,
                  "actual_quantity": null,
                  "batch_transactions": [],
                  "location_id": 2327,
                  "order_created_date": "2021-09-01T07:49:29.000Z",
                  "done_date": null,
                  "production_deadline_date": "2021-10-18T08:00:00.000Z",
                  "additional_info": "",
                  "is_linked_to_sales_order": true,
                  "ingredient_availability": "IN_STOCK",
                  "total_cost": 0,
                  "total_actual_time": 0,
                  "total_planned_time": 18000,
                  "sales_order_id": 1,
                  "sales_order_row_id": 1,
                  "sales_order_delivery_deadline": "2021-09-01T07:49:29.813Z",
                  "material_cost": 10,
                  "created_at": "2021-09-01T07:49:29.813Z",
                  "updated_at": "2021-10-15T14:05:47.625Z",
                  "subassemblies_cost": 10,
                  "operations_cost": 10,
                  "deleted_at": null,
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_unlink": {
      "post": {
        "summary": "Unlink a manufacturing order from sales order row",
        "tags": ["Manufacturing order"],
        "description": "Unlinks the manufacturing order from a particular sales order row.",
        "operationId": "unlinkManufacturingOrder",
        "requestBody": {
          "description": "new manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["sales_order_row_id"],
                "properties": { "sales_order_row_id": { "type": "number" } }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Manufacturing order was unlinked" },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_productions": {
      "post": {
        "summary": "Create a manufacturing order production",
        "tags": ["Manufacturing order production"],
        "description": "Creates a new manufacturing order production object.",
        "operationId": "createManufacturingOrderProduction",
        "requestBody": {
          "description": "new manufacturing order production details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["manufacturing_order_id", "completed_quantity"],
                "properties": {
                  "manufacturing_order_id": { "type": "number" },
                  "completed_quantity": {
                    "type": "number",
                    "maximum": 1000000000000000
                  },
                  "completed_date": { "type": "string" },
                  "is_final": { "type": "boolean" },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "manufacturing_order_recipe_row_id",
                        "quantity"
                      ],
                      "properties": {
                        "manufacturing_order_recipe_row_id": {
                          "type": "number"
                        },
                        "quantity": { "type": "number" },
                        "batch_transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["quantity", "batch_id"],
                            "properties": {
                              "quantity": {
                                "maximum": 1000000000000000,
                                "type": "number"
                              },
                              "batch_id": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "operations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["manufacturing_order_operation_id", "time"],
                      "properties": {
                        "manufacturing_order_operation_id": {
                          "type": "number"
                        },
                        "time": { "type": "number" },
                        "batch_transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["quantity", "batch_id"],
                            "properties": {
                              "quantity": {
                                "maximum": 1000000000000000,
                                "type": "number"
                              },
                              "batch_id": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "serial_numbers": {
                    "type": "array",
                    "items": { "type": "number", "additionalProperties": false }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New manufacturing order production",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21300,
                  "manufacturing_order_id": 21400,
                  "quantity": 2,
                  "production_date": "2023-02-10T10:06:13.047Z",
                  "created_at": "2023-02-10T10:06:14.425Z",
                  "updated_at": "2023-02-10T10:06:15.094Z",
                  "deleted_at": null,
                  "ingredients": [
                    {
                      "id": 252,
                      "location_id": 321,
                      "variant_id": 24764,
                      "manufacturing_order_id": 21400,
                      "manufacturing_order_recipe_row_id": 20300,
                      "production_id": 21300,
                      "quantity": 4,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 1,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:15.070Z",
                      "deleted_at": null
                    }
                  ],
                  "operations": [
                    {
                      "id": 61,
                      "location_id": 321,
                      "manufacturing_order_id": 21300,
                      "manufacturing_order_operation_id": 20400,
                      "production_id": 21300,
                      "time": 18000,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 50,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:14.435Z",
                      "deleted_at": null
                    }
                  ],
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all manufacturing orders",
        "tags": ["Manufacturing order"],
        "description": "Returns a list of manufacturing orders youâ€™ve previously created.\n  The manufacturing orders are returned in sorted order, with the most recent manufacturing orders appearing first.",
        "operationId": "getAllManufacturingOrderProductions",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters manufacturing order productions by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "manufacturing_order_ids",
            "required": false,
            "description": "Filters manufacturing order productions by manufacturing order ids.",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all manufacturing order productions",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 21300,
                      "manufacturing_order_id": 21400,
                      "quantity": 2,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "created_at": "2023-02-10T10:06:14.425Z",
                      "updated_at": "2023-02-10T10:06:15.094Z",
                      "deleted_at": null,
                      "ingredients": [
                        {
                          "id": 252,
                          "location_id": 321,
                          "variant_id": 24764,
                          "manufacturing_order_id": 21400,
                          "manufacturing_order_recipe_row_id": 20300,
                          "production_id": 21300,
                          "quantity": 4,
                          "production_date": "2023-02-10T10:06:13.047Z",
                          "cost": 1,
                          "created_at": "2023-02-10T10:06:14.435Z",
                          "updated_at": "2023-02-10T10:06:15.070Z",
                          "deleted_at": null
                        }
                      ],
                      "operations": [
                        {
                          "id": 61,
                          "location_id": 321,
                          "manufacturing_order_id": 21300,
                          "manufacturing_order_operation_id": 20400,
                          "production_id": 21300,
                          "time": 18000,
                          "production_date": "2023-02-10T10:06:13.047Z",
                          "cost": 50,
                          "created_at": "2023-02-10T10:06:14.435Z",
                          "updated_at": "2023-02-10T10:06:14.435Z",
                          "deleted_at": null
                        }
                      ],
                      "serial_numbers": [
                        {
                          "id": 1,
                          "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                          "serial_number": "SN1",
                          "resource_type": "Production",
                          "resource_id": 2,
                          "transaction_date": "2023-02-10T10:06:14.435Z"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_productions/{id}": {
      "get": {
        "summary": "Retrieve a manufacturing order production",
        "tags": ["Manufacturing order production"],
        "description": "Retrieves the details of an existing manufacturing order production based on ID.",
        "operationId": "getManufacturingOrderProduction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order production id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Manufacturing order production",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21300,
                  "manufacturing_order_id": 21400,
                  "quantity": 2,
                  "production_date": "2023-02-10T10:06:13.047Z",
                  "created_at": "2023-02-10T10:06:14.425Z",
                  "updated_at": "2023-02-10T10:06:15.094Z",
                  "deleted_at": null,
                  "ingredients": [
                    {
                      "id": 252,
                      "location_id": 321,
                      "variant_id": 24764,
                      "manufacturing_order_id": 21400,
                      "manufacturing_order_recipe_row_id": 20300,
                      "production_id": 21300,
                      "quantity": 4,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 1,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:15.070Z",
                      "deleted_at": null
                    }
                  ],
                  "operations": [
                    {
                      "id": 61,
                      "location_id": 321,
                      "manufacturing_order_id": 21300,
                      "manufacturing_order_operation_id": 20400,
                      "production_id": 21300,
                      "time": 18000,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 50,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:14.435Z",
                      "deleted_at": null
                    }
                  ],
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a manufacturing order production",
        "tags": ["Manufacturing order production"],
        "description": "Updates the specified manufacturing order production by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged.",
        "operationId": "updateManufacturingOrderProduction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "manufacturing order production id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "manufacturing order production details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": { "production_date": { "type": "string" } }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated manufacturing order production",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 21300,
                  "manufacturing_order_id": 21400,
                  "quantity": 2,
                  "production_date": "2023-02-10T10:06:13.047Z",
                  "created_at": "2023-02-10T10:06:14.425Z",
                  "updated_at": "2023-02-10T10:06:15.094Z",
                  "deleted_at": null,
                  "ingredients": [
                    {
                      "id": 252,
                      "location_id": 321,
                      "variant_id": 24764,
                      "manufacturing_order_id": 21400,
                      "manufacturing_order_recipe_row_id": 20300,
                      "production_id": 21300,
                      "quantity": 4,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 1,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:15.070Z",
                      "deleted_at": null
                    }
                  ],
                  "operations": [
                    {
                      "id": 61,
                      "location_id": 321,
                      "manufacturing_order_id": 21300,
                      "manufacturing_order_operation_id": 20400,
                      "production_id": 21300,
                      "time": 18000,
                      "production_date": "2023-02-10T10:06:13.047Z",
                      "cost": 50,
                      "created_at": "2023-02-10T10:06:14.435Z",
                      "updated_at": "2023-02-10T10:06:14.435Z",
                      "deleted_at": null
                    }
                  ],
                  "serial_numbers": [
                    {
                      "id": 1,
                      "transaction_id": "eb4da756-0842-4495-9118-f8135f681234",
                      "serial_number": "SN1",
                      "resource_type": "Production",
                      "resource_id": 2,
                      "transaction_date": "2023-02-10T10:06:14.435Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a manufacturing order production",
        "tags": ["Manufacturing order production"],
        "description": "Deletes a single manufacturing order production by id.",
        "operationId": "deleteManufacturingOrderProduction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order production id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Manufacturing order production deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_production_ingredients/{id}": {
      "patch": {
        "summary": "Update a manufacturing order production ingredient",
        "tags": ["Manufacturing order production ingredient"],
        "description": "Updates the specified manufacturing order production ingredient by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged. Manufacturing order production ingredient cannot be updated when\n  the manufacturing order status is DONE.",
        "operationId": "updateManufacturingOrderProductionIngredient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "manufacturing order production ingredient id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "manufacturing order production ingredient details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "batch_transactions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["batch_id", "quantity"],
                      "properties": {
                        "quantity": { "type": "number" },
                        "batch_id": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated manufacturing order production ingredient",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 252,
                  "location_id": 321,
                  "variant_id": 24001,
                  "manufacturing_order_id": 21400,
                  "manufacturing_order_recipe_row_id": 20300,
                  "production_id": 21300,
                  "quantity": 4,
                  "production_date": "2023-02-10T10:06:13.047Z",
                  "cost": 1
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_operation_rows": {
      "post": {
        "summary": "Create a manufacturing order operation row",
        "tags": ["Manufacturing order operation"],
        "description": "Add an operation row to an existing manufacturing order. Operation rows cannot be added when the\n  manufacturing order status is DONE.",
        "operationId": "createManufacturingOrderOperationRow",
        "requestBody": {
          "description": "new manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["manufacturing_order_id", "status"],
                "properties": {
                  "manufacturing_order_id": { "type": "number" },
                  "operation_id": {
                    "type": "number",
                    "description": "If operation ID is used to map the operation, then operation_name is ignored."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["process", "setup", "perUnit", "fixed"],
                    "description": "Different operation types allows you to use different cost calculations depending on the type of product operation<br/>\n        Process: The process operation type is best for when products are individually built and time is the main driver of cost.<br/>\n        Setup: The setup operation type is best for setting up a machine for production where the production quantity doesn't affect cost.<br/>\n        Per unit: The per unit operation type is best when cost of time isn't a factor, but only the quantity of product made.<br/>\n        Fixed cost: The fixed cost operation type is useful for adding the expected extra costs that go into producing a product.\n       "
                  },
                  "operation_name": {
                    "type": "string",
                    "description": "If operation name is used to map the operation then we match to the existing operations by name.\n        If a match is not found, a new one is created."
                  },
                  "resource_id": {
                    "type": "number",
                    "description": "If resource ID is used to map the resource, then resource_name is ignored."
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "If resource name is used to map the resource then we match to the existing resources by name.\n        If a match is not found, a new one is created."
                  },
                  "planned_time_parameter": {
                    "type": "number",
                    "maximum": 10000000000000000,
                    "description": "The planned duration of an operation, in seconds, to either manufacture one unit of a product or\n        complete a manufacturing order (based on type).\n      "
                  },
                  "planned_time_per_unit": {
                    "type": "number",
                    "maximum": 10000000000000000,
                    "deprecated": true,
                    "description": "(This field is deprecated in favor of planned_time_parameter)\n        The planned duration of an operation, in seconds, to either manufacture one unit of a product or\n         complete a manufacturing order (based on type)\n      "
                  },
                  "cost_parameter": {
                    "type": "number",
                    "description": "The expected cost of an operation, either total or per hour/unit of product (based on type).<br/>\n        Total cost of the operation on a manufacturing order is calculated as follows:<br/>\n        process: cost = cost_parameter x planned_time_parameter (in hours) x product quantity<br/>\n        setup: cost = cost_parameter x planned_time_parameter (in hours)<br/>\n        perUnit: cost = cost_parameter x product quantity <br/>\n        fixed: cost = cost_parameter\n      "
                  },
                  "cost_per_hour": {
                    "type": "number",
                    "deprecated": true,
                    "description": "(This field is deprecated in favor of cost_parameter)\n        The expected cost of an operation, either total or per hour/unit of product (based on type).<br/>\n        Total cost of the operation on a manufacturing order is calculated as follows:<br/>\n        process: cost = cost_parameter x planned_time_parameter (in hours) x product quantity<br/>\n        setup: cost = cost_parameter x planned_time_parameter (in hours)<br/>\n        perUnit: cost = cost_parameter x product quantity<br/>\n        fixed: cost = cost_parameter\n      "
                  },
                  "status": { "type": "string", "enum": ["NOT_STARTED"] },
                  "assigned_operators": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "operator_id": {
                          "type": "number",
                          "description": "If operator ID is used to map the operator, then name is ignored."
                        },
                        "name": {
                          "type": "string",
                          "description": "If operator name is used to map the operator then we match to the existing operators by name."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New manufacturing order operation row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "status": "IN_PROGRESS",
                  "type": "process",
                  "rank": 1,
                  "manufacturing_order_id": 1,
                  "operation_id": 1,
                  "operation_name": "Pack",
                  "resource_id": 1,
                  "resource_name": "Table",
                  "assigned_operators": [
                    { "operator_id": 1, "name": "Pack", "deleted_at": null }
                  ],
                  "completed_by_operators": [],
                  "active_operator_id": 1,
                  "planned_time_per_unit": 1,
                  "planned_time_parameter": 1,
                  "total_actual_time": 1,
                  "planned_cost_per_unit": 1,
                  "total_actual_cost": 1,
                  "cost_per_hour": 1,
                  "cost_parameter": 1,
                  "group_boundary": 1000,
                  "is_status_actionable": true,
                  "completed_at": "2020-10-23T10:37:05.085Z",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all manufacturing order operation rows",
        "tags": ["Manufacturing order operation"],
        "description": "Returns a list of manufacturing order operation rows youâ€™ve previously created.\n  The manufacturing order operation rows are returned in sorted order,\n   with the most recent manufacturing order operation rows appearing first.",
        "operationId": "getAllManufacturingOrderOperationRows",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters manufacturing order operation rows by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "status",
            "required": false,
            "description": "Filters manufacturing orders by a status.",
            "schema": {
              "enum": [
                "NOT_STARTED",
                "BLOCKED",
                "IN_PROGRESS",
                "PAUSED",
                "COMPLETED"
              ]
            },
            "in": "query"
          },
          {
            "name": "manufacturing_order_id",
            "required": false,
            "description": "Filters manufacturing orders by location.",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all manufacturing order operation rows",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "status": "IN_PROGRESS",
                      "type": "process",
                      "rank": 1,
                      "manufacturing_order_id": 1,
                      "operation_id": 1,
                      "operation_name": "Pack",
                      "resource_id": 1,
                      "resource_name": "Table",
                      "assigned_operators": [
                        { "operator_id": 1, "name": "Pack", "deleted_at": null }
                      ],
                      "completed_by_operators": [],
                      "active_operator_id": 1,
                      "planned_time_per_unit": 1,
                      "planned_time_parameter": 1,
                      "total_actual_time": 1,
                      "planned_cost_per_unit": 1,
                      "total_actual_cost": 1,
                      "cost_per_hour": 1,
                      "cost_parameter": 1,
                      "group_boundary": 1000,
                      "is_status_actionable": true,
                      "completed_at": "2020-10-23T10:37:05.085Z",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_operation_rows/{id}": {
      "get": {
        "summary": "Retrieve a manufacturing order operation row",
        "tags": ["Manufacturing order operation"],
        "description": "Retrieves the details of an existing manufacturing order operation row.",
        "operationId": "getManufacturingOrderOperationRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order operaton row id",
            "schema": { "type": "number" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Manufacturing order operation row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "moOperationRowResponseExample": {
                    "id": 1,
                    "status": "IN_PROGRESS",
                    "type": "process",
                    "rank": 1,
                    "manufacturing_order_id": 1,
                    "operation_id": 1,
                    "operation_name": "Pack",
                    "resource_id": 1,
                    "resource_name": "Table",
                    "assigned_operators": [
                      { "operator_id": 1, "name": "Pack", "deleted_at": null }
                    ],
                    "completed_by_operators": [],
                    "active_operator_id": 1,
                    "planned_time_per_unit": 1,
                    "planned_time_parameter": 1,
                    "total_actual_time": 1,
                    "planned_cost_per_unit": 1,
                    "total_actual_cost": 1,
                    "cost_per_hour": 1,
                    "cost_parameter": 1,
                    "group_boundary": 1000,
                    "is_status_actionable": true,
                    "completed_at": "2020-10-23T10:37:05.085Z",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a manufacturing order operation row",
        "tags": ["Manufacturing order operation"],
        "description": "Updates the specified manufacturing order operation row by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged. Only completed_by_operators and total_actual_time can be\n    updated when the manufacturing order status is DONE",
        "operationId": "updateManufacturingOrderOperationRow",
        "requestBody": {
          "description": "manufacturing order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["manufacturing_order_id", "status"],
                "properties": {
                  "operation_id": {
                    "type": "number",
                    "description": "If operation ID is used to map the operation, then operation_name is ignored."
                  },
                  "operation_name": {
                    "type": "string",
                    "description": "If operation name is used to map the operation then we match to the existing operations by name.\n        If a match is not found, a new one is created."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["process", "setup", "perUnit", "fixed"],
                    "description": "Different operation types allows you to use different cost calculations depending on the type of product operation<br/>\n        Process: The process operation type is best for when products are individually built and time is the main driver of cost.<br/>\n        Setup: The setup operation type is best for setting up a machine for production where the production quantity doesn't affect cost.<br/>\n        Per unit: The per unit operation type is best when cost of time isn't a factor, but only the quantity of product made.<br/>\n        Fixed cost: The fixed cost operation type is useful for adding the expected extra costs that go into producing a product.\n      "
                  },
                  "resource_id": {
                    "type": "number",
                    "description": "If resource ID is used to map the resource, then resource_name is ignored."
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "If resource name is used to map the resource then we match to the existing resources by name.\n        If a match is not found, a new one is created."
                  },
                  "planned_time_parameter": {
                    "type": "number",
                    "maximum": 10000000000000000,
                    "description": "The planned duration of an operation, in seconds, to either manufacture one unit of a product or\n        complete a manufacturing order (based on type)."
                  },
                  "planned_time_per_unit": {
                    "type": "number",
                    "maximum": 10000000000000000,
                    "deprecated": true,
                    "description": "(This field is deprecated in favor of planned_time_parameter)\n        The planned duration of an operation, in seconds, to either manufacture one unit of a product or\n         complete a manufacturing order (based on type)\n      "
                  },
                  "total_actual_time": {
                    "type": "number",
                    "maximum": 10000000000000000
                  },
                  "cost_parameter": {
                    "type": "number",
                    "description": "The expected cost of an operation, either total or per hour/unit of product (based on type).<br/>\n        Total cost of the operation on a manufacturing order is calculated as follows:<br/>\n        process: cost = cost_parameter x planned_time_parameter (in hours) x product quantity<br/>\n        setup: cost = cost_parameter x planned_time_parameter (in hours)<br/>\n        perUnit: cost = cost_parameter x product quantity<br/>\n        fixed: cost = cost_parameter\n      "
                  },
                  "cost_per_hour": {
                    "type": "number",
                    "deprecated": true,
                    "description": "(This field is deprecated in favor of cost_parameter)\n        The expected cost of an operation, either total or per hour/unit of product (based on type).<br/>\n        Total cost of the operation on a manufacturing order is calculated as follows:<br/>\n        process: cost = cost_parameter x planned_time_parameter (in hours) x product quantity<br/>\n        setup: cost = cost_parameter x planned_time_parameter (in hours)<br/>\n        perUnit: cost = cost_parameter x product quantity<br/>\n        fixed: cost = cost_parameter\n      "
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "NOT_STARTED",
                      "BLOCKED",
                      "IN_PROGRESS",
                      "PAUSED",
                      "COMPLETED"
                    ]
                  },
                  "assigned_operators": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "operator_id": {
                          "type": "number",
                          "description": "If operator ID is used to map the operator, then name is ignored."
                        },
                        "name": {
                          "type": "string",
                          "description": "If operator name is used to map the operator then we match to the existing operators by name."
                        }
                      }
                    }
                  },
                  "completed_by_operators": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "operator_id": {
                          "type": "number",
                          "description": "If operator ID is used to map the operator, then name is ignored."
                        },
                        "name": {
                          "type": "string",
                          "description": "If operator name is used to map the operator then we match to the existing operators by name."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "manufacturing order operation id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "New manufacturing order operation row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "moOperationRowResponseExample": {
                    "id": 1,
                    "status": "IN_PROGRESS",
                    "type": "process",
                    "rank": 1,
                    "manufacturing_order_id": 1,
                    "operation_id": 1,
                    "operation_name": "Pack",
                    "resource_id": 1,
                    "resource_name": "Table",
                    "assigned_operators": [
                      { "operator_id": 1, "name": "Pack", "deleted_at": null }
                    ],
                    "completed_by_operators": [],
                    "active_operator_id": 1,
                    "planned_time_per_unit": 1,
                    "planned_time_parameter": 1,
                    "total_actual_time": 1,
                    "planned_cost_per_unit": 1,
                    "total_actual_cost": 1,
                    "cost_per_hour": 1,
                    "cost_parameter": 1,
                    "group_boundary": 1000,
                    "is_status_actionable": true,
                    "completed_at": "2020-10-23T10:37:05.085Z",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a manufacturing order operation row",
        "tags": ["Manufacturing order operation"],
        "description": "Deletes a single manufacturing order operation row by id.",
        "operationId": "deleteManufacturingOrderOperationRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order operation id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Manufacturing order operation deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_recipe_rows": {
      "post": {
        "summary": "Create a manufacturing order recipe row",
        "tags": ["Manufacturing order recipe"],
        "description": "Add a recipe row to an existing manufacturing order.\n  Recipe rows cannot be added when the manufacturing order status is DONE.",
        "operationId": "createManufacturingOrderRecipeRows",
        "requestBody": {
          "description": "new manufacturing order recipe details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "manufacturing_order_id",
                  "variant_id",
                  "planned_quantity_per_unit"
                ],
                "properties": {
                  "manufacturing_order_id": { "type": "number" },
                  "variant_id": { "type": "number" },
                  "notes": { "type": "string" },
                  "planned_quantity_per_unit": { "type": "number" },
                  "total_actual_quantity": { "type": "number" },
                  "batch_transactions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "batch_id": { "type": "number" },
                        "quantity": { "type": "number" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New manufacturin order operation row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "manufacturing_order_id": 1,
                  "variant_id": 1,
                  "notes": "Pay close attention to this",
                  "planned_quantity_per_unit": 1.2,
                  "total_actual_quantity": 12,
                  "ingredient_availability": "IN_STOCK",
                  "ingredient_expected_date": "2021-03-18T12:33:39.957Z",
                  "batch_transactions": [
                    { "batch_id": 11, "quantity": 7.4 },
                    { "batch_id": 12, "quantity": 4.6 }
                  ],
                  "cost": 50.4,
                  "created_at": "2021-02-18T12:33:39.957Z",
                  "updated_at": "2021-02-18T12:33:39.957Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all manufacturing order recipe rows",
        "tags": ["Manufacturing order recipe"],
        "description": "Returns a list of manufacturing order recipe rows youâ€™ve previously created. The manufacturing order\n  recipe rows are returned in sorted order, with the most recent manufacturing order recipe rows appearing first.",
        "operationId": "getAllManufacturingOrderRecipeRows",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters manufacturing order recipe rows by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "manufacturing_order_id",
            "required": false,
            "description": "Filters manufacturing orders recipe rows by manufacturing order id.",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "variant_id",
            "required": false,
            "description": "Filters manufacturing orders recipe rows by variant id.",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "ingredient_availability",
            "required": false,
            "description": "Filters manufacturing orders by an ingredient availability.",
            "schema": {
              "enum": [
                "PROCESSED",
                "IN_STOCK",
                "NOT_AVAILABLE",
                "EXPECTED",
                "NO_RECIPE",
                "NOT_APPLICABLE"
              ]
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all manufacturing order recipe rows",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "manufacturing_order_id": 1,
                      "variant_id": 1,
                      "notes": "Pay close attention to this",
                      "planned_quantity_per_unit": 1.2,
                      "total_actual_quantity": 12,
                      "ingredient_availability": "IN_STOCK",
                      "ingredient_expected_date": "2021-03-18T12:33:39.957Z",
                      "batch_transactions": [
                        { "batch_id": 11, "quantity": 7.4 },
                        { "batch_id": 12, "quantity": 4.6 }
                      ],
                      "cost": 50.4,
                      "created_at": "2021-02-18T12:33:39.957Z",
                      "updated_at": "2021-02-18T12:33:39.957Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/manufacturing_order_recipe_rows/{id}": {
      "get": {
        "summary": "Retrieve a manufacturing order recipe row",
        "tags": ["Manufacturing order recipe"],
        "description": "Retrieves the details of an existing manufacturing order recipe row.",
        "operationId": "getManufacturingOrderRecipeRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order recipe row id",
            "schema": { "type": "number" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Manufacturing order recipe rows",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "manufacturing_order_id": 1,
                  "variant_id": 1,
                  "notes": "Pay close attention to this",
                  "planned_quantity_per_unit": 1.2,
                  "total_actual_quantity": 12,
                  "ingredient_availability": "IN_STOCK",
                  "ingredient_expected_date": "2021-03-18T12:33:39.957Z",
                  "batch_transactions": [
                    { "batch_id": 11, "quantity": 7.4 },
                    { "batch_id": 12, "quantity": 4.6 }
                  ],
                  "cost": 50.4,
                  "created_at": "2021-02-18T12:33:39.957Z",
                  "updated_at": "2021-02-18T12:33:39.957Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a manufacturing order recipe row",
        "tags": ["Manufacturing order recipe"],
        "description": "Updates the specified manufacturing order recipe row by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged. Recipe rows cannot be updated when\n  the manufacturing order status is DONE.",
        "operationId": "updateManufacturingOrderRecipeRows",
        "requestBody": {
          "description": "manufacturing order recipe details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "variant_id": { "type": "number" },
                  "notes": { "type": "string" },
                  "planned_quantity_per_unit": { "type": "number" },
                  "total_actual_quantity": { "type": "number" },
                  "batch_transactions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "batch_id": { "type": "number" },
                        "quantity": { "type": "number" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "manufacturing order recipe id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "New manufacturin order operation row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "manufacturing_order_id": 1,
                  "variant_id": 1,
                  "notes": "Pay close attention to this",
                  "planned_quantity_per_unit": 1.2,
                  "total_actual_quantity": 12,
                  "ingredient_availability": "IN_STOCK",
                  "ingredient_expected_date": "2021-03-18T12:33:39.957Z",
                  "batch_transactions": [
                    { "batch_id": 11, "quantity": 7.4 },
                    { "batch_id": 12, "quantity": 4.6 }
                  ],
                  "cost": 50.4,
                  "created_at": "2021-02-18T12:33:39.957Z",
                  "updated_at": "2021-02-18T12:33:39.957Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a manufacturing order recipe row",
        "tags": ["Manufacturing order recipe"],
        "description": "Deletes a single manufacturing order recipe row by id.",
        "operationId": "deleteManufacturingOrderRecipeRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Manufacturing order recipe id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Manufacturing order recipe deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/materials": {
      "post": {
        "summary": "Create a material",
        "tags": ["Material"],
        "description": "Creates a material object.",
        "operationId": "createMaterial",
        "requestBody": {
          "description": "new material details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "variants"],
                "properties": {
                  "name": { "type": "string" },
                  "uom": { "type": "string", "maxLength": 7 },
                  "category_name": { "type": "string" },
                  "default_supplier_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "additional_info": { "type": "string" },
                  "batch_tracked": { "type": "boolean" },
                  "is_sellable": { "type": "boolean" },
                  "purchase_uom": { "type": "string", "maxLength": 7 },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "maximum": 1000000000000
                  },
                  "configs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "values"],
                      "properties": {
                        "name": { "type": "string" },
                        "values": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "variants": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "sku": { "type": "string" },
                        "purchase_price": {
                          "type": "number",
                          "maximum": 100000000000,
                          "minimum": 0,
                          "nullable": true
                        },
                        "internal_barcode": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 40
                        },
                        "registered_barcode": {
                          "type": "string",
                          "maxLength": 40,
                          "minLength": 3
                        },
                        "supplier_item_codes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 40
                          }
                        },
                        "lead_time": {
                          "type": "number",
                          "maximum": 999,
                          "minimum": 0,
                          "nullable": true
                        },
                        "minimum_order_quantity": {
                          "type": "number",
                          "maximum": 999999999,
                          "minimum": 0,
                          "nullable": true
                        },
                        "config_attributes": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["config_name", "config_value"],
                            "properties": {
                              "config_name": { "type": "string" },
                              "config_value": { "type": "string" }
                            }
                          }
                        },
                        "custom_field_collection_id": {
                          "type": "integer",
                          "maximum": 2147483647,
                          "nullable": true
                        },
                        "custom_fields": {
                          "type": "array",
                          "maxItems": 3,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["field_name", "field_value"],
                            "properties": {
                              "field_name": {
                                "maxLength": 40,
                                "type": "string"
                              },
                              "field_value": {
                                "maxLength": 100,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New material created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Kyber Crystal",
                  "uom": "pcs",
                  "category_name": "Lightsaber components",
                  "default_supplier_id": 1,
                  "type": "material",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": false,
                  "is_sellable": false,
                  "variants": [
                    {
                      "id": 1,
                      "sku": "KC",
                      "sales_price": null,
                      "product_id": 1,
                      "purchase_price": 45,
                      "type": "material",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ]
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all materials",
        "tags": ["Material"],
        "description": "Returns a list of materials youâ€™ve previously created. The materials are returned in sorted order,\n    with the most recent materials appearing first.",
        "operationId": "getAllMaterials",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters materials by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters materials by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "uom",
            "required": false,
            "description": "Filters materials by a uom",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "default_supplier_id",
            "required": false,
            "description": "Filters materials by a default_supplier_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "is_sellable",
            "required": false,
            "description": "Filters materials by a is_sellable",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "batch_tracked",
            "required": false,
            "description": "Filters materials by a batch_tracked",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "purchase_uom",
            "required": false,
            "description": "Filters materials by a purchase_uom",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "purchase_uom_conversion_rate",
            "required": false,
            "description": "Filters materials by a purchase_uom_conversion_rate",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "include_archived",
            "required": false,
            "description": "Archived data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all materials",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Kyber Crystal",
                      "uom": "pcs",
                      "category_name": "Lightsaber components",
                      "default_supplier_id": 1,
                      "type": "material",
                      "purchase_uom": "pcs",
                      "purchase_uom_conversion_rate": 1,
                      "batch_tracked": false,
                      "is_sellable": false,
                      "archived_at": "2020-10-20T10:37:05.085Z",
                      "variants": [
                        {
                          "id": 1,
                          "product_id": null,
                          "material_id": 1,
                          "sku": "KC",
                          "sales_price": null,
                          "purchase_price": 45,
                          "config_attributes": [
                            {
                              "config_name": "Type",
                              "config_value": "Standard"
                            }
                          ],
                          "type": "material",
                          "deleted_at": null,
                          "internal_barcode": "internalcode",
                          "registered_barcode": "registeredcode",
                          "supplier_item_codes": ["code"],
                          "lead_time": 1,
                          "minimum_order_quantity": 3,
                          "custom_fields": [
                            {
                              "field_name": "Power level",
                              "field_value": "Strong"
                            }
                          ],
                          "updated_at": "2020-10-23T10:37:05.085Z",
                          "created_at": "2020-10-23T10:37:05.085Z"
                        }
                      ],
                      "configs": [
                        {
                          "id": 1,
                          "name": "Type",
                          "values": ["Standard", "Double-bladed"],
                          "product_id": 1
                        }
                      ],
                      "additional_info": "additional info",
                      "custom_field_collection_id": 1,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "supplier": {
                        "id": 1,
                        "name": "Luke Skywalker",
                        "email": "luke.skywalker@example.com",
                        "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                        "currency": "UAH",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z",
                        "deleted_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/materials/{id}": {
      "get": {
        "summary": "Retrieve a material",
        "tags": ["Material"],
        "description": "Retrieves the details of an existing material based on ID.",
        "operationId": "getMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Material id",
            "schema": { "type": "integer" },
            "in": "path"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of an existing material",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Kyber Crystal",
                  "uom": "pcs",
                  "category_name": "Lightsaber components",
                  "default_supplier_id": 1,
                  "type": "material",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": false,
                  "is_sellable": false,
                  "archived_at": "2020-10-20T10:37:05.085Z",
                  "variants": [
                    {
                      "id": 1,
                      "product_id": null,
                      "material_id": 1,
                      "sku": "KC",
                      "sales_price": null,
                      "purchase_price": 45,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "type": "material",
                      "deleted_at": null,
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ],
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "created_at": "2020-10-23T10:37:05.085Z"
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "supplier": {
                    "id": 1,
                    "name": "Luke Skywalker",
                    "email": "luke.skywalker@example.com",
                    "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                    "currency": "UAH",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a material",
        "tags": ["Material"],
        "description": "Updates the specified material by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Material id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Material details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": { "type": "string" },
                  "uom": { "type": "string", "maxLength": 7 },
                  "category_name": { "type": "string" },
                  "default_supplier_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "additional_info": { "type": "string" },
                  "batch_tracked": { "type": "boolean" },
                  "is_sellable": { "type": "boolean" },
                  "is_archived": { "type": "boolean" },
                  "purchase_uom": {
                    "type": "string",
                    "maxLength": 7,
                    "description": "If used, then purchase_uom_conversion_rate must have a value as well."
                  },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "description": "If used, then purchase_uom must have a value as well.",
                    "maximum": 1000000000000
                  },
                  "configs": {
                    "type": "array",
                    "minItems": 1,
                    "description": "When updating configs, all configs and values must be provided. Existing ones are matched,\n        new ones are created, and configs not provided in the update are deleted.",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "values"],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "If config ID is used to map the config, then name is ignored."
                        },
                        "name": {
                          "type": "string",
                          "description": "If config name is used to map the config, then we match to the existing config by name.\n              If a match is not found, a new one is created."
                        },
                        "values": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "custom_field_collection_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Material updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Kyber Crystal",
                  "uom": "pcs",
                  "category_name": "Lightsaber components",
                  "default_supplier_id": 1,
                  "type": "material",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": false,
                  "is_sellable": false,
                  "archived_at": "2020-10-20T10:37:05.085Z",
                  "variants": [
                    {
                      "id": 1,
                      "sku": "KC",
                      "sales_price": null,
                      "product_id": 1,
                      "purchase_price": 45,
                      "type": "material",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ]
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a material",
        "tags": ["Material"],
        "description": "Deletes a material by id.",
        "operationId": "deleteMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Material id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Material deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/negative_stock": {
      "get": {
        "summary": "List all variants with negative stock",
        "tags": ["Inventory"],
        "description": "Returns a list of variants with negative stock balance.\n  Each variant has a date of the latest stock movement that resulted in negative stock balance.",
        "operationId": "getAllNegativeStock",
        "parameters": [
          {
            "name": "location_id",
            "required": false,
            "description": "Filters negative stock by a valid location id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "variant_id",
            "required": false,
            "description": "Filters negative stock by a valid variant id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "latest_negative_stock_date_max",
            "required": false,
            "description": "Filters negative stock by a latest negative stock date max",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "latest_negative_stock_date_min",
            "required": false,
            "description": "Filters negative stock by a latest negative stock date min",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters negative stock by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "sku",
            "required": false,
            "description": "Filters negative stock by a sku",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "category",
            "required": false,
            "description": "Filters negative stock by a category",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all variants with negative stock",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "variant_id": 1,
                      "location_id": 1,
                      "latest_negative_stock_date": "2022-03-31T12:07:00.000Z",
                      "name": "Emitter Matrix",
                      "sku": "EM",
                      "category": "Lightsaber component"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Create a product",
        "tags": ["Product"],
        "description": "Creates a product object.",
        "operationId": "createProduct",
        "requestBody": {
          "description": "new product details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "variants"],
                "properties": {
                  "name": { "type": "string" },
                  "uom": { "type": "string", "maxLength": 7 },
                  "category_name": { "type": "string" },
                  "is_sellable": { "type": "boolean" },
                  "is_archived": { "type": "boolean" },
                  "is_producible": { "type": "boolean" },
                  "is_purchasable": { "type": "boolean" },
                  "is_auto_assembly": { "type": "boolean" },
                  "default_supplier_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "additional_info": { "type": "string" },
                  "batch_tracked": { "type": "boolean" },
                  "serial_tracked": { "type": "boolean" },
                  "operations_in_sequence": { "type": "boolean" },
                  "purchase_uom": { "type": "string", "maxLength": 7 },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "maximum": 1000000000000
                  },
                  "lead_time": {
                    "type": "integer",
                    "maximum": 999,
                    "nullable": true
                  },
                  "minimum_order_quantity": {
                    "type": "number",
                    "maximum": 999999999,
                    "minimum": 0,
                    "nullable": true
                  },
                  "configs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "values"],
                      "properties": {
                        "name": { "type": "string" },
                        "values": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "custom_field_collection_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "nullable": true
                  },
                  "variants": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "sku": { "type": "string" },
                        "purchase_price": {
                          "type": "number",
                          "maximum": 100000000000,
                          "minimum": 0,
                          "nullable": true
                        },
                        "sales_price": {
                          "type": "number",
                          "maximum": 100000000000,
                          "minimum": 0,
                          "nullable": true
                        },
                        "config_attributes": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["config_value", "config_name"],
                            "properties": {
                              "config_name": { "type": "string" },
                              "config_value": { "type": "string" }
                            }
                          }
                        },
                        "internal_barcode": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 40
                        },
                        "registered_barcode": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 40
                        },
                        "supplier_item_codes": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "minLength": 1,
                            "maxLength": 40,
                            "type": "string"
                          }
                        },
                        "custom_fields": {
                          "type": "array",
                          "maxItems": 3,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": ["field_name", "field_value"],
                            "properties": {
                              "field_name": {
                                "maxLength": 40,
                                "type": "string"
                              },
                              "field_value": {
                                "maxLength": 100,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New product created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Standard-hilt lightsaber",
                  "uom": "pcs",
                  "category_name": "lightsaber",
                  "is_sellable": true,
                  "is_producible": true,
                  "default_supplier_id": 1,
                  "is_purchasable": true,
                  "is_auto_assembly": true,
                  "type": "product",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": true,
                  "serial_tracked": false,
                  "operations_in_sequence": false,
                  "variants": [
                    {
                      "id": 1,
                      "sku": "EM",
                      "sales_price": 40,
                      "product_id": 1,
                      "purchase_price": 0,
                      "type": "product",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ]
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all products",
        "tags": ["Product"],
        "description": "Returns a list of products youâ€™ve previously created. The products are returned in sorted order,\n    with the most recent products appearing first.",
        "operationId": "getAllProducts",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters products by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters products by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "uom",
            "required": false,
            "description": "Filters products by a uom",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "is_sellable",
            "required": false,
            "description": "Filters products by a is_sellable",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "is_producible",
            "required": false,
            "description": "Filters products by an is_producible",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "is_purchasable",
            "required": false,
            "description": "Filters products by an is_purchasable",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "is_auto_assembly",
            "required": false,
            "description": "Filters products by an is_auto_assembly",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "default_supplier_id",
            "required": false,
            "description": "Filters products by a default_supplier_id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "batch_tracked",
            "required": false,
            "description": "Filters products by a batch_tracked",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "serial_tracked",
            "required": false,
            "description": "Filters products by a serial_tracked",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "operations_in_sequence",
            "required": false,
            "description": "Filters products by a operations_in_sequence",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "purchase_uom",
            "required": false,
            "description": "Filters products by a purchase_uom",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "purchase_uom_conversion_rate",
            "required": false,
            "description": "Filters products by a purchase_uom_conversion_rate",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "include_archived",
            "required": false,
            "description": "Archived data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all products",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Standard-hilt lightsaber",
                      "uom": "pcs",
                      "category_name": "lightsaber",
                      "is_producible": true,
                      "default_supplier_id": 1,
                      "is_sellable": true,
                      "is_purchasable": true,
                      "is_auto_assembly": true,
                      "type": "product",
                      "purchase_uom": "pcs",
                      "purchase_uom_conversion_rate": 1,
                      "batch_tracked": true,
                      "operations_in_sequence": false,
                      "serial_tracked": false,
                      "archived_at": "2020-10-20T10:37:05.085Z",
                      "variants": [
                        {
                          "id": 1,
                          "sku": "EM",
                          "sales_price": 40,
                          "product_id": 1,
                          "purchase_price": 0,
                          "type": "product",
                          "created_at": "2020-10-23T10:37:05.085Z",
                          "updated_at": "2020-10-23T10:37:05.085Z",
                          "lead_time": 1,
                          "minimum_order_quantity": 3,
                          "config_attributes": [
                            {
                              "config_name": "Type",
                              "config_value": "Standard"
                            }
                          ],
                          "internal_barcode": "internalcode",
                          "registered_barcode": "registeredcode",
                          "supplier_item_codes": ["code"],
                          "custom_fields": [
                            {
                              "field_name": "Power level",
                              "field_value": "Strong"
                            }
                          ]
                        }
                      ],
                      "configs": [
                        {
                          "id": 1,
                          "name": "Type",
                          "values": ["Standard", "Double-bladed"],
                          "product_id": 1
                        }
                      ],
                      "additional_info": "additional info",
                      "custom_field_collection_id": 1,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "supplier": {
                        "id": 1,
                        "name": "Luke Skywalker",
                        "email": "luke.skywalker@example.com",
                        "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                        "currency": "UAH",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z",
                        "deleted_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Retrieve a product",
        "tags": ["Product"],
        "description": "Retrieves the details of an existing product based on ID.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Product id",
            "schema": { "type": "integer" },
            "in": "path"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of an existing product",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Standard-hilt lightsaber",
                  "uom": "pcs",
                  "category_name": "lightsaber",
                  "is_producible": true,
                  "default_supplier_id": 1,
                  "is_sellable": true,
                  "is_purchasable": true,
                  "is_auto_assembly": true,
                  "type": "product",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": false,
                  "operations_in_sequence": false,
                  "archived_at": "2020-10-20T10:37:05.085Z",
                  "variants": [
                    {
                      "id": 1,
                      "sku": "EM",
                      "sales_price": 40,
                      "product_id": 1,
                      "purchase_price": 0,
                      "type": "product",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ]
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "supplier": {
                    "id": 1,
                    "name": "Luke Skywalker",
                    "email": "luke.skywalker@example.com",
                    "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                    "currency": "UAH",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a product",
        "tags": ["Product"],
        "description": "Updates the specified product by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Product id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "product details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": { "type": "string" },
                  "uom": { "type": "string", "maxLength": 7 },
                  "category_name": { "type": "string" },
                  "is_sellable": { "type": "boolean" },
                  "is_producible": {
                    "type": "boolean",
                    "description": "A product has to be purchasable, producible, or both."
                  },
                  "is_purchasable": {
                    "type": "boolean",
                    "description": "A product has to be purchasable, producible, or both."
                  },
                  "is_auto_assembly": {
                    "type": "boolean",
                    "description": "A product can be auto-assembled only if it is producible and not batch tracked."
                  },
                  "default_supplier_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "additional_info": { "type": "string" },
                  "batch_tracked": { "type": "boolean" },
                  "operations_in_sequence": { "type": "boolean" },
                  "serial_tracked": { "type": "boolean" },
                  "purchase_uom": {
                    "type": "string",
                    "maxLength": 7,
                    "description": "If used, then purchase_uom_conversion_rate must have a value as well."
                  },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "maximum": 1000000000000,
                    "description": "If used, then purchase_uom must have a value as well."
                  },
                  "configs": {
                    "type": "array",
                    "minItems": 1,
                    "description": "When updating configs, all configs and values must be provided.\n        Existing ones are matched, new ones are created, and configs not provided in the update are deleted.",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "values"],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "If config ID is used to map the config, then name is ignored."
                        },
                        "name": {
                          "type": "string",
                          "description": "If config name is used to map the config, then we match to the existing config by name.\n              If a match is not found, a new one is created."
                        },
                        "values": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "custom_field_collection_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Standard-hilt lightsaber",
                  "uom": "pcs",
                  "category_name": "lightsaber",
                  "is_sellable": true,
                  "is_producible": true,
                  "default_supplier_id": 1,
                  "is_purchasable": true,
                  "is_auto_assembly": true,
                  "type": "product",
                  "purchase_uom": "pcs",
                  "purchase_uom_conversion_rate": 1,
                  "batch_tracked": true,
                  "serial_tracked": false,
                  "operations_in_sequence": false,
                  "archived_at": "2020-10-20T10:37:05.085Z",
                  "variants": [
                    {
                      "id": 1,
                      "sku": "EM",
                      "sales_price": 40,
                      "product_id": 1,
                      "purchase_price": 0,
                      "type": "product",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "lead_time": 1,
                      "minimum_order_quantity": 3,
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "internal_barcode": "internalcode",
                      "registered_barcode": "registeredcode",
                      "supplier_item_codes": ["code"],
                      "custom_fields": [
                        { "field_name": "Power level", "field_value": "Strong" }
                      ]
                    }
                  ],
                  "configs": [
                    {
                      "id": 1,
                      "name": "Type",
                      "values": ["Standard", "Double-bladed"],
                      "product_id": 1
                    }
                  ],
                  "additional_info": "additional info",
                  "custom_field_collection_id": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": ["Product"],
        "description": "Deletes a product by id.",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Product id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_orders": {
      "post": {
        "summary": "Create a purchase order",
        "tags": ["Purchase order"],
        "description": "Creates a new purchase order object.",
        "operationId": "createPurchaseOrder",
        "requestBody": {
          "description": "new purchase order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "order_no",
                  "supplier_id",
                  "location_id",
                  "purchase_order_rows"
                ],
                "properties": {
                  "order_no": { "type": "string" },
                  "entity_type": {
                    "type": "string",
                    "enum": ["regular", "outsourced"]
                  },
                  "supplier_id": { "type": "integer", "maximum": 2147483647 },
                  "currency": {
                    "description": "E.g. USD, EUR. All currently active currency codes in ISO 4217 format.",
                    "type": "string"
                  },
                  "status": { "type": "string", "enum": ["NOT_RECEIVED"] },
                  "expected_arrival_date": { "type": "string" },
                  "order_created_date": { "type": "string" },
                  "location_id": { "type": "integer", "maximum": 2147483647 },
                  "tracking_location_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Submittable only when entity_type is outsourced"
                  },
                  "additional_info": { "type": "string" },
                  "purchase_order_rows": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["quantity", "variant_id", "price_per_unit"],
                      "properties": {
                        "quantity": {
                          "type": "number",
                          "maximum": 100000000000000000
                        },
                        "variant_id": {
                          "type": "integer",
                          "maximum": 2147483647
                        },
                        "tax_rate_id": {
                          "type": "integer",
                          "maximum": 2147483647
                        },
                        "price_per_unit": {
                          "type": "number",
                          "maximum": 100000000000000000,
                          "minimum": 0
                        },
                        "purchase_uom_conversion_rate": {
                          "type": "number",
                          "maximum": 100000000000000000,
                          "minimum": 0
                        },
                        "purchase_uom": { "type": "string", "maxLength": 7 },
                        "arrival_date": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New purchase order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "status": "NOT_RECEIVED",
                  "billing_status": "NOT_BILLED",
                  "last_document_status": "NOT_SENT",
                  "order_no": "PO-1",
                  "entity_type": "regular",
                  "default_group_id": 9,
                  "supplier_id": 1,
                  "currency": "USD",
                  "expected_arrival_date": "2021-10-13T15:31:48.490Z",
                  "order_created_date": "2021-10-13T15:31:48.490Z",
                  "additional_info": "Please unpack",
                  "location_id": 1,
                  "tracking_location_id": null,
                  "total": 1,
                  "total_in_base_currency": 1,
                  "created_at": "2021-02-03T13:13:07.110Z",
                  "updated_at": "2021-02-03T13:13:07.110Z",
                  "deleted_at": null,
                  "purchase_order_rows": [
                    {
                      "id": 1,
                      "quantity": 1,
                      "variant_id": 1,
                      "tax_rate_id": 1,
                      "price_per_unit": 1.5,
                      "purchase_uom_conversion_rate": 1.1,
                      "purchase_uom": "cm",
                      "created_at": "2021-02-03T13:13:07.121Z",
                      "updated_at": "2021-02-03T13:13:07.121Z",
                      "deleted_at": null,
                      "batch_transactions": [],
                      "currency": "USD",
                      "conversion_rate": null,
                      "conversion_date": null,
                      "received_date": "2021-02-03T13:13:07.000Z",
                      "purchase_order_id": 1,
                      "total": 1,
                      "total_in_base_currency": 1,
                      "landed_cost": "45.0000000000",
                      "group_id": 11
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all purchase orders",
        "tags": ["Purchase order"],
        "description": "Returns a list of purchase orders youâ€™ve previously created. The purchase orders are returned in sorted\n    order, with the most recent purchase orders appearing first.",
        "operationId": "findPurchaseOrders",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters purchase orders by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "order_no",
            "required": false,
            "description": "Filters purchase orders by an order number",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "entity_type",
            "required": false,
            "description": "Filters purchase orders by an entity type",
            "schema": { "type": "string", "enum": ["regular", "outsourced"] },
            "in": "query"
          },
          {
            "name": "status",
            "required": false,
            "description": "Filters purchase orders by a status",
            "schema": {
              "enum": ["NOT_RECEIVED", "PARTIALLY_RECEIVED", "RECEIVED"]
            },
            "in": "query"
          },
          {
            "name": "billing_status",
            "required": false,
            "description": "Filters purchase orders by a billing status",
            "schema": { "enum": ["BILLED", "NOT_BILLED", "PARTIALLY_BILLED"] },
            "in": "query"
          },
          {
            "name": "currency",
            "required": false,
            "description": "Filters purchase orders by a currency",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "location_id",
            "required": false,
            "description": "Filters purchase orders by a location",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "tracking_location_id",
            "required": false,
            "description": "Filters purchase orders by a tracking location",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "supplier_id",
            "required": false,
            "description": "Filters purchase orders by a supplier",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all purchase orders",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "status": "NOT_RECEIVED",
                      "order_no": "PO-1",
                      "entity_type": "regular",
                      "default_group_id": 9,
                      "supplier_id": 1,
                      "currency": "USD",
                      "expected_arrival_date": "2021-10-13T15:31:48.490Z",
                      "order_created_date": "2021-10-13T15:31:48.490Z",
                      "additional_info": "Please unpack",
                      "location_id": 1,
                      "ingredient_availability": null,
                      "ingredient_expected_date": null,
                      "tracking_location_id": null,
                      "total": 1,
                      "total_in_base_currency": 1,
                      "created_at": "2021-10-13T15:31:48.490Z",
                      "updated_at": "2021-10-13T15:31:48.490Z",
                      "deleted_at": null,
                      "billing_status": "BILLED",
                      "last_document_status": "SENDING",
                      "purchase_order_rows": [
                        {
                          "id": 1,
                          "quantity": 1,
                          "variant_id": 1,
                          "tax_rate_id": 1,
                          "price_per_unit": 1.5,
                          "purchase_uom": "cm",
                          "created_at": "2021-10-13T15:31:48.490Z",
                          "updated_at": "2021-10-13T15:31:48.490Z",
                          "deleted_at": null,
                          "currency": "USD",
                          "conversion_rate": 1,
                          "total": 1,
                          "total_in_base_currency": 1,
                          "conversion_date": "2021-10-13T15:31:48.490Z",
                          "received_date": "2021-10-13T15:31:48.490Z",
                          "batch_transactions": [
                            { "quantity": 1, "batch_id": 1 }
                          ],
                          "purchase_order_id": 1,
                          "purchase_uom_conversion_rate": 1.1,
                          "landed_cost": "45.0000000000",
                          "group_id": 11
                        }
                      ],
                      "supplier": {
                        "id": 1,
                        "name": "Luke Skywalker",
                        "email": "luke.skywalker@example.com",
                        "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                        "currency": "UAH",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z",
                        "deleted_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_orders/{id}": {
      "get": {
        "summary": "Retrieve a purchase order",
        "tags": ["Purchase order"],
        "description": "Retrieves the details of an existing purchase order based on ID",
        "operationId": "getPurchaseOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order id",
            "schema": { "type": "integer" },
            "in": "path"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["supplier"] }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "status": "NOT_RECEIVED",
                  "order_no": "PO-1",
                  "entity_type": "regular",
                  "default_group_id": 9,
                  "supplier_id": 1,
                  "currency": "USD",
                  "expected_arrival_date": "2021-10-13T15:31:48.490Z",
                  "order_created_date": "2021-10-13T15:31:48.490Z",
                  "additional_info": "Please unpack",
                  "location_id": 1,
                  "ingredient_availability": null,
                  "ingredient_expected_date": null,
                  "tracking_location_id": null,
                  "total": 1,
                  "total_in_base_currency": 1,
                  "created_at": "2021-10-13T15:31:48.490Z",
                  "updated_at": "2021-10-13T15:31:48.490Z",
                  "deleted_at": null,
                  "billing_status": "BILLED",
                  "last_document_status": "SENDING",
                  "purchase_order_rows": [
                    {
                      "id": 1,
                      "quantity": 1,
                      "variant_id": 1,
                      "tax_rate_id": 1,
                      "price_per_unit": 1.5,
                      "purchase_uom": "cm",
                      "created_at": "2021-10-13T15:31:48.490Z",
                      "updated_at": "2021-10-13T15:31:48.490Z",
                      "deleted_at": null,
                      "currency": "USD",
                      "conversion_rate": 1,
                      "total": 1,
                      "total_in_base_currency": 1,
                      "conversion_date": "2021-10-13T15:31:48.490Z",
                      "received_date": "2021-10-13T15:31:48.490Z",
                      "batch_transactions": [{ "quantity": 1, "batch_id": 1 }],
                      "purchase_order_id": 1,
                      "purchase_uom_conversion_rate": 1.1,
                      "landed_cost": "45.0000000000",
                      "group_id": 11
                    }
                  ],
                  "supplier": {
                    "id": 1,
                    "name": "Luke Skywalker",
                    "email": "luke.skywalker@example.com",
                    "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                    "currency": "UAH",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a purchase order",
        "tags": ["Purchase order"],
        "description": "Updates the specified purchase order by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updatePurchaseOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Purchase order fields to be updated with new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "order_no": {
                    "type": "string",
                    "minLength": 3,
                    "description": "Updatable only when status is in NOT_RECEIVED and PARTIALLY_RECEIVED"
                  },
                  "supplier_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Updatable only when status is in NOT_RECEIVED"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Updatable only when status is in NOT_RECEIVED"
                  },
                  "tracking_location_id": {
                    "type": "string",
                    "maximum": 2147483647,
                    "description": "Updatable only when status is in NOT_RECEIVED and\n        entity_type is outsourced"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["NOT_RECEIVED", "RECEIVED", "PARTIALLY_RECEIVED"]
                  },
                  "expected_arrival_date": {
                    "type": "string",
                    "description": "Updatable only when status is in NOT_RECEIVED and PARTIALLY_RECEIVED. Update will override arrival_date on purchase order rows"
                  },
                  "order_created_date": { "type": "string" },
                  "location_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Updatable only when status is in NOT_RECEIVED"
                  },
                  "additional_info": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase order updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "status": "NOT_RECEIVED",
                  "billing_status": "NOT_BILLED",
                  "last_document_status": "NOT_SENT",
                  "order_no": "PO-1",
                  "entity_type": "regular",
                  "default_group_id": 9,
                  "supplier_id": 1,
                  "currency": "USD",
                  "expected_arrival_date": "2021-10-13T15:31:48.490Z",
                  "order_created_date": "2021-10-13T15:31:48.490Z",
                  "additional_info": "Please unpack",
                  "location_id": 1,
                  "tracking_location_id": null,
                  "total": 1,
                  "total_in_base_currency": 1,
                  "created_at": "2021-02-03T13:13:07.110Z",
                  "updated_at": "2021-02-03T13:13:07.110Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete purchase order",
        "tags": ["Purchase order"],
        "description": "Deletes a single purchase order by id.",
        "operationId": "deletePurchaseOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Purchase order deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/po_additional_cost_rows": {
      "post": {
        "summary": "Create a purchase order additional cost row",
        "tags": ["Purchase order additional cost row"],
        "description": "Add a purchase order additional cost row to an existing group.",
        "operationId": "createPoAdditionalCostRow",
        "requestBody": {
          "description": "new purchase order additional cost row",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "additional_cost_id",
                  "group_id",
                  "tax_rate_id",
                  "price"
                ],
                "properties": {
                  "additional_cost_id": { "type": "integer" },
                  "group_id": { "type": "integer" },
                  "tax_rate_id": { "type": "integer" },
                  "price": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0
                  },
                  "distribution_method": {
                    "type": "string",
                    "enum": ["BY_VALUE", "NON_DISTRIBUTED"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New purchase order additional cost row created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "additional_cost_id": 11,
                  "group_id": 21,
                  "name": "Shipping",
                  "distribution_method": "BY_VALUE",
                  "tax_rate_id": 31,
                  "tax_rate": 20,
                  "price": 100,
                  "price_in_base": 110,
                  "currency": "EUR",
                  "currency_conversion_rate": 1.1,
                  "currency_conversion_rate_fix_date": "2023-10-01T10:37:05.085Z",
                  "updated_at": "2023-10-01T10:37:05.085Z",
                  "created_at": "2023-10-21T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all purchase order additional cost rows",
        "tags": ["Purchase order additional cost row"],
        "description": "Returns a list of purchase order additional cost rows youâ€™ve previously created.",
        "operationId": "getPurchaseOrderAdditionalCostRows",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters purchase order additional cost rows by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "group_id",
            "required": false,
            "description": "Filters purchase order additional cost rows by group id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "additional_cost_id",
            "required": false,
            "description": "Filters purchase order additional cost rows by additional cost id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "tax_rate_id",
            "required": false,
            "description": "Filters purchase order additional cost rows by tax rate id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "currency",
            "required": false,
            "description": "Filters purchase order additional cost rows by a currency",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "distribution_method",
            "required": false,
            "description": "Filters purchase order additional cost rows by an distribution method",
            "schema": {
              "type": "string",
              "enum": ["BY_VALUE", "NON_DISTRIBUTED"]
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all purchase order additional cost rows",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "additional_cost_id": 11,
                      "group_id": 21,
                      "name": "Shipping",
                      "distribution_method": "BY_VALUE",
                      "tax_rate_id": 31,
                      "tax_rate": 20,
                      "price": 100,
                      "price_in_base": 110,
                      "currency": "EUR",
                      "currency_conversion_rate": 1.1,
                      "currency_conversion_rate_fix_date": "2023-10-01T10:37:05.085Z",
                      "updated_at": "2023-10-01T10:37:05.085Z",
                      "created_at": "2023-10-21T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/po_additional_cost_rows/{id}": {
      "get": {
        "summary": "Retrieve a purchase order additional cost row",
        "tags": ["Purchase order additional cost row"],
        "description": "Retrieves the details of an existing purchase order additional cost row based on ID",
        "operationId": "getPoAdditionalCostRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order additional cost row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "A purchase order additional cost row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "additional_cost_id": 11,
                  "group_id": 21,
                  "name": "Shipping",
                  "distribution_method": "BY_VALUE",
                  "tax_rate_id": 31,
                  "tax_rate": 20,
                  "price": 100,
                  "price_in_base": 110,
                  "currency": "EUR",
                  "currency_conversion_rate": 1.1,
                  "currency_conversion_rate_fix_date": "2023-10-01T10:37:05.085Z",
                  "updated_at": "2023-10-01T10:37:05.085Z",
                  "created_at": "2023-10-21T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a purchase order additional cost row",
        "tags": ["Purchase order additional cost row"],
        "description": "Updates the specified purchase order additional cost row by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateAdditionalCostRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order additional cost row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Purchase order additional cost row details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "additional_cost_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "tax_rate_id": { "type": "integer", "maximum": 2147483647 },
                  "price": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0
                  },
                  "distribution_method": {
                    "type": "string",
                    "enum": ["BY_VALUE", "NON_DISTRIBUTED"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase order additional cost row updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "additional_cost_id": 11,
                  "group_id": 21,
                  "name": "Shipping",
                  "distribution_method": "BY_VALUE",
                  "tax_rate_id": 31,
                  "tax_rate": 20,
                  "price": 100,
                  "price_in_base": 110,
                  "currency": "EUR",
                  "currency_conversion_rate": 1.1,
                  "currency_conversion_rate_fix_date": "2023-10-01T10:37:05.085Z",
                  "updated_at": "2023-10-01T10:37:05.085Z",
                  "created_at": "2023-10-21T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a purchase order additional cost row",
        "tags": ["Purchase order additional cost row"],
        "description": "Deletes a purchase order additional cost row by id.",
        "operationId": "deletePoAdditionalCost",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order additional cost id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Purchase order additional cost row deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_order_receive": {
      "post": {
        "summary": "Receive a purchase order",
        "tags": ["Purchase order"],
        "description": "If you receive the items on the purchase order, you can mark the purchase order as received.\n    This will update the existing purchase order rows quantities to the quantities left unreceived and\n    create a new rows with the received quantities and dates. If you want to mark all rows as received and\n    the order doesnâ€™t contain batch tracked items, you can use PATCH /purchase_orders/id endpoint.\n    Reverting the receive must also be done through that endpoint.",
        "operationId": "receivePurchaseOrder",
        "requestBody": {
          "description": "receive purchase order rows details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["quantity", "purchase_order_row_id"],
                      "properties": {
                        "purchase_order_row_id": {
                          "type": "integer",
                          "maximum": 2147483647
                        },
                        "quantity": {
                          "type": "number",
                          "maximum": 100000000000000000
                        },
                        "received_date": { "type": "string" },
                        "batch_transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "quantity": {
                                "maximum": 100000000000000000,
                                "type": "number"
                              },
                              "batch_id": { "type": "integer" }
                            }
                          }
                        }
                      }
                    },
                    "title": "Multiple rows",
                    "minItems": 1
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["quantity", "purchase_order_row_id"],
                    "properties": {
                      "purchase_order_row_id": {
                        "type": "integer",
                        "maximum": 2147483647
                      },
                      "quantity": {
                        "type": "number",
                        "maximum": 100000000000000000
                      },
                      "received_date": { "type": "string" },
                      "batch_transactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "quantity": {
                              "maximum": 100000000000000000,
                              "type": "number"
                            },
                            "batch_id": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "title": "Single row"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Receive purchase order rows",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_order_rows": {
      "post": {
        "summary": "Create a purchase order row",
        "tags": ["Purchase order row"],
        "description": "Creates a new purchase order row object.",
        "operationId": "createPurchaseOrderRow",
        "requestBody": {
          "description": "new purchase order row details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "purchase_order_id",
                  "price_per_unit",
                  "quantity",
                  "variant_id"
                ],
                "properties": {
                  "purchase_order_id": {
                    "type": "integer",
                    "maximum": 2147483647
                  },
                  "quantity": {
                    "type": "number",
                    "maximum": 100000000000000000
                  },
                  "variant_id": { "type": "integer", "maximum": 2147483647 },
                  "tax_rate_id": { "type": "integer", "maximum": 2147483647 },
                  "group_id": { "type": "integer", "maximum": 2147483647 },
                  "price_per_unit": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0
                  },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0
                  },
                  "purchase_uom": { "type": "string", "maxLength": 7 },
                  "arrival_date": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New purchase order row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "quantity": 1,
                  "variant_id": 1,
                  "tax_rate_id": 1,
                  "price_per_unit": 1.5,
                  "purchase_uom_conversion_rate": 1.1,
                  "purchase_uom": "cm",
                  "created_at": "2021-02-03T13:13:07.121Z",
                  "updated_at": "2021-02-03T13:13:07.121Z",
                  "deleted_at": null,
                  "batch_transactions": [],
                  "currency": "USD",
                  "conversion_rate": null,
                  "conversion_date": null,
                  "received_date": "2021-02-03T13:13:07.000Z",
                  "arrival_date": "2021-02-02T13:13:07.000Z",
                  "purchase_order_id": 268123,
                  "total": 1,
                  "total_in_base_currency": 1,
                  "landed_cost": 45.5,
                  "group_id": 11
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all purchase order rows",
        "tags": ["Purchase order row"],
        "description": "Returns a list of purchase order rows youâ€™ve previously created.\n  The purchase order rows are returned in sorted order, with the most recent rows appearing first.",
        "operationId": "getAllPurchaseOrderRows",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters purchase order rows by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "purchase_order_id",
            "required": false,
            "description": "Filters purchase order rows by purchase order id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "variant_id",
            "required": false,
            "description": "Filters purchase order rows by variant id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "tax_rate_id",
            "required": false,
            "description": "Filters purchase order rows by tax rate id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "group_id",
            "required": false,
            "description": "Filters purchase order rows by group id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "purchase_uom",
            "required": false,
            "description": "Filters purchase order rows by purchase_uom",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of purchase order rows",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "quantity": 1,
                      "variant_id": 1,
                      "tax_rate_id": 1,
                      "price_per_unit": 1.5,
                      "price_per_unit_in_base_currency": 1.5,
                      "purchase_uom_conversion_rate": 1.1,
                      "purchase_uom": "cm",
                      "total": 1,
                      "total_in_base_currency": 1,
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null,
                      "currency": "USD",
                      "conversion_rate": 1.1,
                      "conversion_date": "2022-06-20T10:37:05.085Z",
                      "received_date": "2022-06-20T10:37:05.085Z",
                      "arrival_date": "2022-06-19T10:37:05.085Z",
                      "purchase_order_id": 1,
                      "landed_cost": 45.5,
                      "group_id": 11,
                      "batch_transactions": [{ "batch_id": 1, "quantity": 10 }]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_order_rows/{id}": {
      "get": {
        "summary": "Retrieve a purchase order row",
        "tags": ["Purchase order row"],
        "description": "Retrieves the details of an existing purchase order row based on ID",
        "operationId": "getPurchaseOrderRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "A purchase order row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "quantity": 1,
                  "variant_id": 1,
                  "tax_rate_id": 1,
                  "price_per_unit": 1.5,
                  "price_per_unit_in_base_currency": 1.5,
                  "purchase_uom_conversion_rate": 1.1,
                  "purchase_uom": "cm",
                  "total": 1,
                  "total_in_base_currency": 1,
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null,
                  "currency": "USD",
                  "conversion_rate": 1,
                  "conversion_date": "2022-06-20T10:37:05.085Z",
                  "received_date": "2022-06-20T10:37:05.085Z",
                  "arrival_date": "2022-06-19T10:37:05.085Z",
                  "purchase_order_id": 1,
                  "landed_cost": 45.5,
                  "group_id": 11,
                  "batch_transactions": [{ "batch_id": 1, "quantity": 10 }]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a purchase order row",
        "tags": ["Purchase order row"],
        "description": "Updates the specified purchase order row by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updatePurchaseOrderRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "updated purchase order row details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "quantity": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "description": "Updatable only when received_date is null"
                  },
                  "variant_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Updatable only when received_date is null"
                  },
                  "tax_rate_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Updatable only when received_date is null"
                  },
                  "group_id": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "description": "Updatable only when received_date is null"
                  },
                  "price_per_unit": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0,
                    "description": "Updatable only when received_date is null"
                  },
                  "purchase_uom_conversion_rate": {
                    "type": "number",
                    "maximum": 100000000000000000,
                    "minimum": 0,
                    "description": "Updatable only when received_date is null"
                  },
                  "purchase_uom": {
                    "type": "string",
                    "description": "Updatable only when received_date is null",
                    "maxLength": 7
                  },
                  "received_date": {
                    "type": "string",
                    "description": "Updatable only when received_date is not null"
                  },
                  "arrival_date": {
                    "type": "string",
                    "description": "Updatable only when received_date is not null"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated purchase order row",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "quantity": 1,
                  "variant_id": 1,
                  "tax_rate_id": 1,
                  "price_per_unit": 1.5,
                  "purchase_uom_conversion_rate": 1.1,
                  "purchase_uom": "cm",
                  "created_at": "2021-02-03T13:13:07.121Z",
                  "updated_at": "2021-02-03T13:13:07.121Z",
                  "deleted_at": null,
                  "batch_transactions": [],
                  "currency": "USD",
                  "conversion_rate": null,
                  "conversion_date": null,
                  "received_date": "2021-02-03T13:13:07.000Z",
                  "arrival_date": "2021-02-02T13:13:07.000Z",
                  "purchase_order_id": 268123,
                  "total": 1,
                  "total_in_base_currency": 1,
                  "landed_cost": 45.5,
                  "group_id": 11
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete purchase order row",
        "tags": ["Purchase order row"],
        "description": "Deletes a single purchase order row by id.",
        "operationId": "deletePurchaseOrderRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Purchase order row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Purchase order row deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchase_order_accounting_metadata": {
      "get": {
        "summary": "List all purchase order accounting metadata",
        "tags": ["Purchase order accounting metadata"],
        "description": "Returns a list of purchase order accounting metadata entries.",
        "operationId": "getAllPurchaseOrderAccountingMetadata",
        "parameters": [
          {
            "name": "purchase_order_id",
            "required": false,
            "description": "Filters purchase order accounting metadata by purchase order id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "received_items_group_id",
            "required": false,
            "description": "Filters purchase order accounting metadata by received items group id",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all purchase order accounting metadata entries",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "createdAt": "2023-04-17T13:38:07.024Z",
                      "id": 35,
                      "integrationType": "quickBooks",
                      "purchaseOrderId": 311,
                      "porReceivedGroupId": 2000037,
                      "billId": "1082"
                    },
                    {
                      "createdAt": "2023-04-17T13:38:07.024Z",
                      "id": 36,
                      "integrationType": "quickBooks",
                      "purchaseOrderId": 312,
                      "porReceivedGroupId": 2000038,
                      "billId": "1083"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "summary": "Create recipes",
        "tags": ["Recipe"],
        "description": "Create one or many new recipe rows for a product.\n    The endpoint accepts up to 150 recipe rows and processes them in bulk.\n    If rows are successfully created, 204 is returned.",
        "operationId": "createRecipes",
        "requestBody": {
          "description": "new recipes details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["rows"],
                "properties": {
                  "keep_current_rows": {
                    "type": "boolean",
                    "description": "Existing ingredient lines are kept by default,\n      and new lines will be added to existing product recipes. Set to false to delete all existing ingredient lines for\n      related products and add the ingredients as new recipes."
                  },
                  "rows": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 150,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "ingredient_variant_id",
                        "product_variant_id",
                        "quantity"
                      ],
                      "properties": {
                        "quantity": {
                          "type": "number",
                          "maximum": 10000000000000000,
                          "minimum": 0
                        },
                        "ingredient_variant_id": {
                          "type": "integer",
                          "maximum": 2147483647
                        },
                        "product_variant_id": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 2147483647
                        },
                        "notes": {
                          "type": "string",
                          "maxLength": 255,
                          "minLength": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "New recipe",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all recipes",
        "tags": ["Recipe"],
        "description": "Returns a list of recipe (bill of materials) rows youâ€™ve previously created.\n  Product variant recipe consists of ingredient\n    variants and their quantities.",
        "operationId": "getAllRecipes",
        "parameters": [
          {
            "name": "product_variant_ids",
            "required": false,
            "description": "Filters recipes by an array of product variant IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "recipe_row_id",
            "required": false,
            "description": "Filters recipes by recipe row ID",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "product_id",
            "required": false,
            "description": "Filters recipes by product ID",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "ingredient_variant_id",
            "required": false,
            "description": "Filters recipes by ingredient variant ID",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all recipes",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "recipe_row_id": 1,
                      "recipe_id": 1,
                      "product_id": 1,
                      "product_variant_id": 1,
                      "ingredient_variant_id": 1,
                      "quantity": 2,
                      "notes": "some notes",
                      "created_at": "2021-04-05T12:00:00.000Z",
                      "updated_at": "2021-04-05T12:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{id}": {
      "delete": {
        "summary": "Delete a recipe (WILL BE DELETED IN Q1)",
        "tags": ["Recipe"],
        "description": "(WILL BE DELETED IN Q1) Deletes all recipe rows by recipe_id.\n    Recipe ID is unique for a product so all recipe rows for the same product are deleted.",
        "operationId": "deleteRecipe",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Recipe id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Recipe deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/recipe_rows/{id}": {
      "patch": {
        "summary": "Update a recipe row",
        "tags": ["Recipe"],
        "description": "Updates the specified recipe row by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged. Since one recipe row can apply to multiple product variants,\n  updating the row will apply to all objects with the same recipe_row_id.",
        "operationId": "updateRecipeRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Recipe row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Recipe row fields to be updated with new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "quantity": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Ingredient quantity"
                  },
                  "notes": {
                    "type": "string",
                    "minLength": 255,
                    "description": "Notes about recipe row"
                  },
                  "ingredient_variant_id": {
                    "description": "Ingredient variant id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe row updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "ingredient_variant_id": 1,
                  "quantity": 1,
                  "notes": "Important recipe row",
                  "recipe_row_id": 1,
                  "recipe_id": 1,
                  "product_id": 1,
                  "product_variant_id": 1
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a recipe row",
        "tags": ["Recipe"],
        "description": "Deletes a recipes row by recipe_row_id.\n    If one recipe row applies to multiple product variants then all of them are deleted.",
        "operationId": "deleteRecipeRow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Recipe row id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Recipe row deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers": {
      "post": {
        "summary": "Create a supplier",
        "tags": ["Supplier"],
        "description": "Creates a new supplier object.",
        "operationId": "createSupplier",
        "requestBody": {
          "description": "new supplier details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name"],
                "properties": {
                  "name": { "type": "string" },
                  "currency": { "type": "string" },
                  "email": { "type": "string" },
                  "phone": { "type": "string" },
                  "comment": { "type": "string" },
                  "addresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "line_1": { "type": "string", "nullable": true },
                        "line_2": { "type": "string", "nullable": true },
                        "city": { "type": "string", "nullable": true },
                        "state": { "type": "string", "nullable": true },
                        "zip": { "type": "string", "nullable": true },
                        "country": { "type": "string", "nullable": true }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New supplier created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Luke Skywalker",
                  "email": "luke.skywalker@example.com",
                  "phone": "123456",
                  "currency": "USD",
                  "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "default_address_id": 1,
                  "addresses": [
                    {
                      "id": 1,
                      "supplier_id": 12345,
                      "line_1": "Line 1",
                      "line_2": "Line 2",
                      "city": "City",
                      "state": "State",
                      "zip": "Zip",
                      "country": "Country",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "created_at": "2020-10-23T10:37:05.085Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all suppliers",
        "tags": ["Supplier"],
        "description": "Returns a list of suppliers youâ€™ve previously created. The suppliers are returned in sorted order,\n    with the most recent suppliers appearing first.",
        "operationId": "getAllSuppliers",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "description": "Filters suppliers by name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "ids",
            "required": false,
            "description": "Filters suppliers by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "email",
            "required": false,
            "description": "Filters suppliers by an email",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "phone",
            "required": false,
            "description": "Filters suppliers by a phone number",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of suppliers",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Luke Skywalker",
                      "email": "luke.skywalker@example.com",
                      "phone": "123456",
                      "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                      "currency": "UAH",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null,
                      "default_address_id": 1,
                      "addresses": [
                        {
                          "id": 1,
                          "supplier_id": 12345,
                          "line_1": "Line 1",
                          "line_2": "Line 2",
                          "city": "City",
                          "state": "State",
                          "zip": "Zip",
                          "country": "Country",
                          "updated_at": "2020-10-23T10:37:05.085Z",
                          "created_at": "2020-10-23T10:37:05.085Z"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}": {
      "patch": {
        "summary": "Update a supplier",
        "tags": ["Supplier"],
        "description": "Updates the specified supplier by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateSupplier",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Supplier id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Supplier details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "phone": { "type": "string" },
                  "currency": {
                    "type": "string",
                    "description": "The supplierâ€™s currency (ISO 4217)."
                  },
                  "comment": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Supplier updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Luke Skywalker",
                  "email": "luke.skywalker@example.com",
                  "phone": "123456",
                  "comment": "Luke Skywalker was a Tatooine farmboy who rose from humble beginnings to become one of the\n              greatest Jedi the galaxy has ever known.",
                  "currency": "UAH",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a supplier",
        "tags": ["Supplier"],
        "description": "Deletes a supplier by id.",
        "operationId": "deleteSupplier",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Supplier id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Supplier deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/supplier_addresses": {
      "get": {
        "summary": "List all supplier addresses",
        "tags": ["Supplier address"],
        "description": "Returns a list of supplier addresses youâ€™ve previously created.\n   The supplier addresses are returned in sorted order, with the most recent supplier addresses appearing first.",
        "operationId": "getSupplierAddresses",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters supplier addresses by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "supplier_ids",
            "required": false,
            "description": "Filters supplier addresses by an array of supplier IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "line_1",
            "required": false,
            "description": "Filters supplier addresses by a line_1",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "line_2",
            "required": false,
            "description": "Filters supplier addresses by a line_2",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "city",
            "required": false,
            "description": "Filters supplier addresses by a city",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "state",
            "required": false,
            "description": "Filters supplier addresses by a state",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "zip",
            "required": false,
            "description": "Filters supplier addresses by a zip",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "country",
            "required": false,
            "description": "Filters supplier addresses by a country",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all supplier addresses",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "supplier_id": 12345,
                      "line_1": "Line 1",
                      "line_2": "Line 2",
                      "city": "City",
                      "state": "State",
                      "zip": "Zip",
                      "country": "Country",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a supplier address",
        "tags": ["Supplier address"],
        "description": "Add an address to an existing supplier. If the new address is the first one, it is assigned as\n  the default. (A Supplier can have only one address for now)",
        "operationId": "createSupplierAddress",
        "requestBody": {
          "description": "new supplier address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["supplier_id"],
                "properties": {
                  "supplier_id": { "type": "integer", "nullable": false },
                  "line_1": { "type": "string", "nullable": true },
                  "line_2": { "type": "string", "nullable": true },
                  "city": { "type": "string", "nullable": true },
                  "state": { "type": "string", "nullable": true },
                  "zip": { "type": "string", "nullable": true },
                  "country": { "type": "string", "nullable": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New supplier address created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "supplier_id": 12345,
                  "line_1": "Line 1",
                  "line_2": "Line 2",
                  "city": "City",
                  "state": "State",
                  "zip": "Zip",
                  "country": "Country",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "created_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/supplier_addresses/{id}": {
      "patch": {
        "summary": "Update a supplier address",
        "tags": ["Supplier address"],
        "description": "Updates the specified supplier address by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateSupplierAddress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Supplier address id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Supplier address details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "line_1": { "type": "string", "nullable": true },
                  "line_2": { "type": "string", "nullable": true },
                  "city": { "type": "string", "nullable": true },
                  "state": { "type": "string", "nullable": true },
                  "zip": { "type": "string", "nullable": true },
                  "country": { "type": "string", "nullable": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Supplier address updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "supplier_id": 12345,
                  "line_1": "Line 1",
                  "line_2": "Line 2",
                  "city": "City",
                  "state": "State",
                  "zip": "Zip",
                  "country": "Country",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "created_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a supplier address",
        "tags": ["Supplier address"],
        "description": "Deletes a supplier address by id.",
        "operationId": "deleteSupplierAddress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Supplier Address id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Supplier address deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax_rates": {
      "post": {
        "summary": "Create a tax rate",
        "tags": ["Tax rate"],
        "description": "Creates a new tax rate object.",
        "operationId": "createTaxRate",
        "requestBody": {
          "description": "new tax rate details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["rate"],
                "properties": {
                  "name": { "type": "string" },
                  "rate": {
                    "type": "number",
                    "maximum": 999.999,
                    "minimum": 0,
                    "multipleOf": 0.001
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New tax rate created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "15% VAT",
                  "rate": 15,
                  "is_default_sales": true,
                  "is_default_purchases": true,
                  "display_name": "15% VAT",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all tax rates",
        "tags": ["Tax rate"],
        "description": "Returns a list of tax rate youâ€™ve previously created.\n    The tax rate are returned in sorted order, with the most recent tax rate appearing first.",
        "operationId": "getAllTaxRates",
        "parameters": [
          {
            "name": "rate",
            "required": false,
            "description": "Filters tax rates by rate",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "ids",
            "required": false,
            "description": "Filters tax rates by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "name",
            "required": false,
            "description": "Filters tax rates by a name",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "is_default_sales",
            "required": false,
            "description": "Filters tax rates by an is_default_sales",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "is_default_purchases",
            "required": false,
            "description": "Filters tax rates by an is_default_purchases",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tax rates",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "15% VAT",
                      "rate": 15,
                      "is_default_sales": true,
                      "is_default_purchases": true,
                      "display_name": "15% VAT",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/variants": {
      "post": {
        "summary": "Create a variant",
        "tags": ["Variant"],
        "description": "Creates a new variant object. Note that you can create variants for both products and materials.\n    In order for Katana to know which one you are creating,\n    you have to specify either product_id or material_id, not both.",
        "operationId": "createVariant",
        "requestBody": {
          "description": "new variant details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "sku": { "type": "string" },
                  "sales_price": {
                    "type": "number",
                    "maximum": 100000000000,
                    "minimum": 0,
                    "nullable": true
                  },
                  "purchase_price": {
                    "type": "number",
                    "maximum": 100000000000,
                    "minimum": 0,
                    "nullable": true
                  },
                  "product_id": { "type": "integer", "maximum": 2147483647 },
                  "supplier_item_codes": {
                    "type": "array",
                    "minItems": 1,
                    "items": { "type": "string", "minLength": 1 }
                  },
                  "internal_barcode": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 40
                  },
                  "registered_barcode": { "type": "string", "maxLength": 120 },
                  "material_id": { "type": "integer", "maximum": 2147483647 },
                  "lead_time": {
                    "type": "integer",
                    "maximum": 999,
                    "nullable": true
                  },
                  "minimum_order_quantity": {
                    "type": "number",
                    "maximum": 999999999,
                    "minimum": 0,
                    "nullable": true
                  },
                  "config_attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["config_name", "config_value"],
                      "properties": {
                        "config_name": { "type": "string" },
                        "config_value": { "type": "string" }
                      }
                    }
                  },
                  "custom_fields": {
                    "type": "array",
                    "maxItems": 3,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["field_name", "field_value"],
                      "properties": {
                        "field_name": { "maxLength": 40, "type": "string" },
                        "field_value": { "maxLength": 100, "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New variant created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "sku": "EM",
                  "sales_price": 40,
                  "product_id": 1,
                  "material_id": null,
                  "purchase_price": 0,
                  "type": "product",
                  "internal_barcode": "0315",
                  "registered_barcode": "0785223088",
                  "supplier_item_codes": ["978-0785223085", "0785223088"],
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "lead_time": 1,
                  "minimum_order_quantity": 3,
                  "config_attributes": [
                    { "config_name": "Type", "config_value": "Standard" }
                  ],
                  "custom_fields": [
                    { "field_name": "Power level", "field_value": "Strong" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all variants",
        "tags": ["Variant"],
        "description": "Returns a list of variants you've previously created. The variants are returned in sorted order,\n    with the most recent variants appearing first.",
        "operationId": "getAllVariants",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters variants by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "product_id",
            "required": false,
            "description": "Filters variants by a product id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "material_id",
            "required": false,
            "description": "Filters variants by a material id",
            "schema": { "type": "integer" },
            "in": "query"
          },
          {
            "name": "sku",
            "required": false,
            "description": "Filters variants by skus",
            "schema": {
              "type": "array",
              "items": { "type": "string", "minLength": 1 }
            },
            "in": "query"
          },
          {
            "name": "sales_price",
            "required": false,
            "description": "Filters variants by a sales price",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "purchase_price",
            "required": false,
            "description": "Filters variants by a purchase price",
            "schema": { "type": "number" },
            "in": "query"
          },
          {
            "name": "internal_barcode",
            "required": false,
            "description": "Filters variants by an internal barcode",
            "schema": { "type": "string", "minLength": 3, "maxLength": 40 },
            "in": "query"
          },
          {
            "name": "registered_barcode",
            "required": false,
            "description": "Filters variants by a registered barcode",
            "schema": { "type": "string", "maxLength": 120 },
            "in": "query"
          },
          {
            "name": "supplier_item_codes",
            "required": false,
            "description": "Filters variants by supplier item codes. Returns the variants that match with any of the codes in the array.",
            "schema": {
              "type": "array",
              "items": { "type": "string", "minLength": 1 }
            },
            "in": "query"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["product_or_material"] }
            },
            "in": "query"
          },
          {
            "name": "include_deleted",
            "required": false,
            "description": "Soft-deleted data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "include_archived",
            "required": false,
            "description": "Archived data is excluded from result set by default. Set to true to include it.",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_min",
            "required": false,
            "description": "Minimum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "created_at_max",
            "required": false,
            "description": "Maximum value for created_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_min",
            "required": false,
            "description": "Minimum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "updated_at_max",
            "required": false,
            "description": "Maximum value for updated_at range. Must be compatible with ISO 8601 format",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all product variants",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "sku": "EM",
                      "sales_price": 40,
                      "product_id": 1,
                      "material_id": null,
                      "purchase_price": 0,
                      "type": "product",
                      "created_at": "2020-10-23T10:37:05.085Z",
                      "updated_at": "2020-10-23T10:37:05.085Z",
                      "deleted_at": null,
                      "internal_barcode": "0316",
                      "registered_barcode": "0785223088",
                      "supplier_item_codes": ["978-0785223085", "0785223088"],
                      "config_attributes": [
                        { "config_name": "Type", "config_value": "Standard" }
                      ],
                      "product_or_material": {
                        "id": 1,
                        "name": "Standard-hilt lightsaber",
                        "uom": "pcs",
                        "category_name": "lightsaber",
                        "is_producible": true,
                        "default_supplier_id": 1,
                        "is_purchasable": true,
                        "type": "product",
                        "purchase_uom": "pcs",
                        "purchase_uom_conversion_rate": 1,
                        "batch_tracked": false,
                        "variants": [
                          {
                            "id": 1,
                            "sku": "EM",
                            "sales_price": 40,
                            "product_id": 1,
                            "purchase_price": 0,
                            "type": "product",
                            "created_at": "2020-10-23T10:37:05.085Z",
                            "updated_at": "2020-10-23T10:37:05.085Z",
                            "lead_time": 1,
                            "minimum_order_quantity": 3,
                            "config_attributes": [
                              {
                                "config_name": "Type",
                                "config_value": "Standard"
                              }
                            ],
                            "internal_barcode": "internalcode",
                            "registered_barcode": "registeredcode",
                            "supplier_item_codes": ["code"],
                            "custom_fields": [
                              {
                                "field_name": "Power level",
                                "field_value": "Strong"
                              }
                            ]
                          }
                        ],
                        "configs": [
                          {
                            "id": 1,
                            "name": "Type",
                            "values": ["Standard", "Double-bladed"],
                            "product_id": 1
                          }
                        ],
                        "additional_info": "additional info",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{id}": {
      "get": {
        "summary": "Retrieve a variant",
        "tags": ["Variant"],
        "description": "Retrieves the details of an existing variant based on ID.",
        "operationId": "getVariant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Variant id",
            "schema": { "type": "integer" },
            "in": "path"
          },
          {
            "name": "extend",
            "required": false,
            "description": "Array of objects that need to be added to the response",
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["product_or_material"] }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of an existing variant",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "sku": "EM",
                  "sales_price": 40,
                  "product_id": 1,
                  "material_id": null,
                  "purchase_price": 0,
                  "type": "product",
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "deleted_at": null,
                  "internal_barcode": "0316",
                  "registered_barcode": "0785223088",
                  "supplier_item_codes": ["978-0785223085", "0785223088"],
                  "config_attributes": [
                    { "config_name": "Type", "config_value": "Standard" }
                  ],
                  "product_or_material": {
                    "id": 1,
                    "name": "Standard-hilt lightsaber",
                    "uom": "pcs",
                    "category_name": "lightsaber",
                    "is_producible": true,
                    "default_supplier_id": 1,
                    "is_purchasable": true,
                    "type": "product",
                    "purchase_uom": "pcs",
                    "purchase_uom_conversion_rate": 1,
                    "batch_tracked": false,
                    "variants": [
                      {
                        "id": 1,
                        "sku": "EM",
                        "sales_price": 40,
                        "product_id": 1,
                        "purchase_price": 0,
                        "type": "product",
                        "created_at": "2020-10-23T10:37:05.085Z",
                        "updated_at": "2020-10-23T10:37:05.085Z",
                        "lead_time": 1,
                        "minimum_order_quantity": 3,
                        "config_attributes": [
                          { "config_name": "Type", "config_value": "Standard" }
                        ],
                        "internal_barcode": "internalcode",
                        "registered_barcode": "registeredcode",
                        "supplier_item_codes": ["code"],
                        "custom_fields": [
                          {
                            "field_name": "Power level",
                            "field_value": "Strong"
                          }
                        ]
                      }
                    ],
                    "configs": [
                      {
                        "id": 1,
                        "name": "Type",
                        "values": ["Standard", "Double-bladed"],
                        "product_id": 1
                      }
                    ],
                    "additional_info": "additional info",
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a variant",
        "tags": ["Variant"],
        "description": "Updates the specified variant by setting the values of the parameters passed.\n    Any parameters not provided will be left unchanged.",
        "operationId": "updateVariant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Variant id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Variant details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "sku": { "type": "string" },
                  "sales_price": {
                    "type": "number",
                    "maximum": 100000000000,
                    "minimum": 0,
                    "nullable": true
                  },
                  "purchase_price": {
                    "type": "number",
                    "maximum": 100000000000,
                    "minimum": 0,
                    "nullable": true
                  },
                  "product_id": { "type": "integer", "maximum": 2147483647 },
                  "supplier_item_codes": {
                    "type": "array",
                    "minItems": 1,
                    "items": { "type": "string", "minLength": 1 }
                  },
                  "internal_barcode": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 40
                  },
                  "registered_barcode": { "type": "string", "maxLength": 120 },
                  "material_id": { "type": "integer", "maximum": 2147483647 },
                  "lead_time": {
                    "type": "integer",
                    "maximum": 999,
                    "nullable": true
                  },
                  "minimum_order_quantity": {
                    "type": "number",
                    "maximum": 999999999,
                    "minimum": 0,
                    "nullable": true
                  },
                  "config_attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["config_name", "config_value"],
                      "properties": {
                        "config_name": {
                          "type": "string",
                          "description": "If a matching config name is not found, an error is returned.\n              Use the product/material endpoint to update the configs."
                        },
                        "config_value": {
                          "type": "string",
                          "description": "If a matching config name is not found,\n              the product/material config list of values is updated, and a new value is added."
                        }
                      }
                    }
                  },
                  "custom_fields": {
                    "type": "array",
                    "maxItems": 3,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["field_name", "field_value"],
                      "properties": {
                        "field_name": { "maxLength": 40, "type": "string" },
                        "field_value": { "maxLength": 100, "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Variant updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "sku": "EM",
                  "sales_price": 40,
                  "product_id": 1,
                  "material_id": null,
                  "purchase_price": 0,
                  "type": "product",
                  "internal_barcode": "0315",
                  "registered_barcode": "0785223088",
                  "supplier_item_codes": ["978-0785223085", "0785223088"],
                  "created_at": "2020-10-23T10:37:05.085Z",
                  "updated_at": "2020-10-23T10:37:05.085Z",
                  "lead_time": 1,
                  "minimum_order_quantity": 3,
                  "config_attributes": [
                    { "config_name": "Type", "config_value": "Standard" }
                  ],
                  "custom_fields": [
                    { "field_name": "Power level", "field_value": "Strong" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a variant",
        "tags": ["Variant"],
        "description": "Deletes a variant by id.",
        "operationId": "deleteVariant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Variant id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Variant deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/variant_bin_locations": {
      "post": {
        "summary": "Link variant default storage bins",
        "tags": ["Variant default storage bin"],
        "description": "Bulk operation for linking variants with the default storage bins. \n  In case the default storage bin doesn't yet exist, it will be created and linked to the variant. \n  This endpoint can also be used for changing existing links of the variants to different storage bins.\n  \n  The endpoint accepts up to 500 variant storage bin objects.",
        "operationId": "linkVariantDefaultStorageBins",
        "requestBody": {
          "description": "Linked variant default storage bin details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 150,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["bin_name", "variant_id"],
                  "properties": {
                    "location_id": { "type": "integer", "maximum": 2147483647 },
                    "variant_id": { "type": "integer", "maximum": 2147483647 },
                    "bin_name": {
                      "type": "string",
                      "maxLength": 40,
                      "minLength": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Linked variant default storage bin order",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 12345,
                    "bin_name": "Bin-2",
                    "variant_id": 11234,
                    "storage_bin_id": 3456,
                    "created_at": "2020-10-23T10:37:05.085Z",
                    "updated_at": "2020-10-23T10:37:05.085Z",
                    "deleted_at": null
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/unlink_variant_bin_locations": {
      "post": {
        "summary": "Unlink variant default storage bins",
        "tags": ["Variant default storage bin"],
        "description": "Bulk operation for unlinking variants from the default storage bins available in a specific location.\n  The endpoint accepts up to 500 variant bin location objects.",
        "operationId": "unlinkVariantDefaultStorageBins",
        "requestBody": {
          "description": "Unlinked variant default storage bin details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 150,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["location_id", "variant_id"],
                  "properties": {
                    "location_id": { "type": "integer", "maximum": 2147483647 },
                    "variant_id": { "type": "integer", "maximum": 2147483647 }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Variant default storage bins were succesfully unlinked.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "post": {
        "summary": "Create a webhook",
        "tags": ["Webhook"],
        "description": "Creates a new webhook object.",
        "operationId": "createWebhook",
        "requestBody": {
          "description": "new webhook details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["url", "subscribed_events"],
                "properties": {
                  "url": { "type": "string", "pattern": "https://*" },
                  "subscribed_events": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "sales_order.created",
                        "sales_order.packed",
                        "sales_order.delivered",
                        "sales_order.updated",
                        "sales_order.deleted",
                        "sales_order.availability_updated",
                        "purchase_order.created",
                        "purchase_order.updated",
                        "purchase_order.deleted",
                        "purchase_order.partially_received",
                        "purchase_order.received",
                        "purchase_order_row.created",
                        "purchase_order_row.received",
                        "purchase_order_row.updated",
                        "purchase_order_row.deleted",
                        "outsourced_purchase_order.created",
                        "outsourced_purchase_order.updated",
                        "outsourced_purchase_order.deleted",
                        "outsourced_purchase_order.received",
                        "outsourced_purchase_order_row.created",
                        "outsourced_purchase_order_row.updated",
                        "outsourced_purchase_order_row.deleted",
                        "outsourced_purchase_order_row.received",
                        "outsourced_purchase_order_recipe_row.created",
                        "outsourced_purchase_order_recipe_row.updated",
                        "outsourced_purchase_order_recipe_row.deleted",
                        "manufacturing_order.created",
                        "manufacturing_order.updated",
                        "manufacturing_order.deleted",
                        "manufacturing_order.in_progress",
                        "manufacturing_order.blocked",
                        "manufacturing_order.done",
                        "manufacturing_order_recipe_row.created",
                        "manufacturing_order_recipe_row.updated",
                        "manufacturing_order_recipe_row.deleted",
                        "manufacturing_order_recipe_row.ingredients_in_stock",
                        "manufacturing_order_operation_row.created",
                        "manufacturing_order_operation_row.updated",
                        "manufacturing_order_operation_row.deleted",
                        "manufacturing_order_operation_row.in_progress",
                        "manufacturing_order_operation_row.paused",
                        "manufacturing_order_operation_row.blocked",
                        "manufacturing_order_operation_row.completed",
                        "current_inventory.product_updated",
                        "current_inventory.material_updated",
                        "current_inventory.product_out_of_stock",
                        "current_inventory.material_out_of_stock",
                        "product.created",
                        "product.updated",
                        "product.deleted",
                        "material.created",
                        "material.updated",
                        "material.deleted",
                        "variant.created",
                        "variant.updated",
                        "variant.deleted",
                        "product_recipe_row.created",
                        "product_recipe_row.deleted",
                        "product_recipe_row.updated"
                      ]
                    }
                  },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New webhook created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "url": "https://katanamrp.com",
                  "token": "73f82127d57a2cea",
                  "enabled": true,
                  "description": "Webhook description",
                  "subscribed_events": ["sales_order.created"],
                  "created_at": "2021-01-28T04:58:40.492Z",
                  "updated_at": "2021-01-28T04:58:40.493Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all webhooks",
        "tags": ["Webhook"],
        "description": "Returns a list of webhooks youâ€™ve previously created. The entries are returned in a sorted order,\n    with the most recent ones appearing first.",
        "operationId": "getAllWebhooks",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "description": "Filters webhooks by an array of IDs",
            "schema": { "type": "array", "items": { "type": "integer" } },
            "in": "query"
          },
          {
            "name": "url",
            "required": false,
            "description": "Filters webhooks by an url",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "enabled",
            "required": false,
            "description": "Filters webhooks by enabled flag",
            "schema": { "type": "boolean" },
            "in": "query"
          },
          {
            "name": "limit",
            "required": false,
            "description": "Used for pagination (default is 50)",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "page",
            "required": false,
            "description": "Used for pagination (default is 1)",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all webhooks",
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": { "type": "number" },
                    "total_pages": { "type": "number" },
                    "offset": { "type": "number" },
                    "page": { "type": "number" },
                    "first_page": { "type": "boolean" },
                    "last_page": { "type": "boolean" }
                  }
                }
              },
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "url": "https://katanamrp.com",
                      "token": "73f82127d57a2cea",
                      "enabled": true,
                      "description": "Webhook description",
                      "subscribed_events": ["sales_order.created"],
                      "created_at": "2021-01-28T04:58:40.492Z",
                      "updated_at": "2021-01-28T04:58:40.493Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "get": {
        "summary": "Retrieve a webhook",
        "tags": ["Webhook"],
        "description": "Retrieves the details of an existing webhook based on ID",
        "operationId": "getWebhook",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Webhook id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "url": "https://katanamrp.com",
                  "token": "73f82127d57a2cea",
                  "enabled": true,
                  "description": "Webhook description",
                  "subscribed_events": ["sales_order.created"],
                  "created_at": "2021-01-28T04:58:40.492Z",
                  "updated_at": "2021-01-28T04:58:40.493Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a webhook",
        "tags": ["Webhook"],
        "description": "Updates the specified webhook by setting the values of the parameters passed.\n  Any parameters not provided will be left unchanged. ",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Webhook id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "webhook fields to be updated with new values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "url": { "type": "string", "pattern": "https://*" },
                  "enabled": { "type": "boolean" },
                  "subscribed_events": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "sales_order.created",
                        "sales_order.packed",
                        "sales_order.delivered",
                        "sales_order.updated",
                        "sales_order.deleted",
                        "sales_order.availability_updated",
                        "purchase_order.created",
                        "purchase_order.updated",
                        "purchase_order.deleted",
                        "purchase_order.partially_received",
                        "purchase_order.received",
                        "purchase_order_row.created",
                        "purchase_order_row.received",
                        "purchase_order_row.updated",
                        "purchase_order_row.deleted",
                        "outsourced_purchase_order.created",
                        "outsourced_purchase_order.updated",
                        "outsourced_purchase_order.deleted",
                        "outsourced_purchase_order.received",
                        "outsourced_purchase_order_row.created",
                        "outsourced_purchase_order_row.updated",
                        "outsourced_purchase_order_row.deleted",
                        "outsourced_purchase_order_row.received",
                        "outsourced_purchase_order_recipe_row.created",
                        "outsourced_purchase_order_recipe_row.updated",
                        "outsourced_purchase_order_recipe_row.deleted",
                        "manufacturing_order.created",
                        "manufacturing_order.updated",
                        "manufacturing_order.deleted",
                        "manufacturing_order.in_progress",
                        "manufacturing_order.blocked",
                        "manufacturing_order.done",
                        "manufacturing_order_recipe_row.created",
                        "manufacturing_order_recipe_row.updated",
                        "manufacturing_order_recipe_row.deleted",
                        "manufacturing_order_recipe_row.ingredients_in_stock",
                        "manufacturing_order_operation_row.created",
                        "manufacturing_order_operation_row.updated",
                        "manufacturing_order_operation_row.deleted",
                        "manufacturing_order_operation_row.in_progress",
                        "manufacturing_order_operation_row.paused",
                        "manufacturing_order_operation_row.blocked",
                        "manufacturing_order_operation_row.completed",
                        "current_inventory.product_updated",
                        "current_inventory.material_updated",
                        "current_inventory.product_out_of_stock",
                        "current_inventory.material_out_of_stock",
                        "product.created",
                        "product.updated",
                        "product.deleted",
                        "material.created",
                        "material.updated",
                        "material.deleted",
                        "variant.created",
                        "variant.updated",
                        "variant.deleted",
                        "product_recipe_row.created",
                        "product_recipe_row.deleted",
                        "product_recipe_row.updated"
                      ]
                    }
                  },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "url": "https://katanamrp.com",
                  "token": "73f82127d57a2cea",
                  "enabled": true,
                  "description": "Webhook description",
                  "subscribed_events": ["sales_order.created"],
                  "created_at": "2021-01-28T04:58:40.492Z",
                  "updated_at": "2021-01-28T04:58:40.493Z"
                }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete webhook",
        "tags": ["Webhook"],
        "description": "Deletes a single webhook by id.",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Webhook id",
            "schema": { "type": "integer" },
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted successfully",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Make sure data is correct",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "name": "NotFoundError",
                  "message": "Not found"
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhook_logs_export": {
      "post": {
        "summary": "Export webhook logs",
        "tags": ["Webhook logs"],
        "description": "Use the endpoint to export your webhook logs and troubleshoot any issues.\n      Webhook logs are filtered by the provided parameters and exported into a CSV file.\n      The response contains an URL to the CSV file.",
        "operationId": "exportWebhookLogs",
        "requestBody": {
          "description": "webhook logs filters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "webhook_id": { "type": "integer" },
                  "event": {
                    "type": "string",
                    "enum": [
                      "sales_order.created",
                      "sales_order.packed",
                      "sales_order.delivered",
                      "sales_order.updated",
                      "sales_order.deleted",
                      "sales_order.availability_updated",
                      "purchase_order.created",
                      "purchase_order.updated",
                      "purchase_order.deleted",
                      "purchase_order.partially_received",
                      "purchase_order.received",
                      "purchase_order_row.created",
                      "purchase_order_row.received",
                      "purchase_order_row.updated",
                      "purchase_order_row.deleted",
                      "outsourced_purchase_order.created",
                      "outsourced_purchase_order.updated",
                      "outsourced_purchase_order.deleted",
                      "outsourced_purchase_order.received",
                      "outsourced_purchase_order_row.created",
                      "outsourced_purchase_order_row.updated",
                      "outsourced_purchase_order_row.deleted",
                      "outsourced_purchase_order_row.received",
                      "outsourced_purchase_order_recipe_row.created",
                      "outsourced_purchase_order_recipe_row.updated",
                      "outsourced_purchase_order_recipe_row.deleted",
                      "manufacturing_order.created",
                      "manufacturing_order.updated",
                      "manufacturing_order.deleted",
                      "manufacturing_order.in_progress",
                      "manufacturing_order.blocked",
                      "manufacturing_order.done",
                      "manufacturing_order_recipe_row.created",
                      "manufacturing_order_recipe_row.updated",
                      "manufacturing_order_recipe_row.deleted",
                      "manufacturing_order_recipe_row.ingredients_in_stock",
                      "manufacturing_order_operation_row.created",
                      "manufacturing_order_operation_row.updated",
                      "manufacturing_order_operation_row.deleted",
                      "manufacturing_order_operation_row.in_progress",
                      "manufacturing_order_operation_row.paused",
                      "manufacturing_order_operation_row.blocked",
                      "manufacturing_order_operation_row.completed",
                      "current_inventory.product_updated",
                      "current_inventory.material_updated",
                      "current_inventory.product_out_of_stock",
                      "current_inventory.material_out_of_stock",
                      "product.created",
                      "product.updated",
                      "product.deleted",
                      "material.created",
                      "material.updated",
                      "material.deleted",
                      "variant.created",
                      "variant.updated",
                      "variant.deleted",
                      "product_recipe_row.created",
                      "product_recipe_row.deleted",
                      "product_recipe_row.updated"
                    ]
                  },
                  "status_code": { "type": "integer" },
                  "delivered": { "type": "boolean" },
                  "created_at_min": { "type": "string" },
                  "created_at_max": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New webhook created",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": { "url": "https://katana-storage.com/your-file" }
              }
            }
          },
          "401": {
            "description": "Make sure you've entered your API token correctly.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "name": "UnauthorizedError",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "Check the details property for a specific error message.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 422,
                  "name": "UnprocessableEntityError",
                  "message": "The request body is invalid. See error object `details` property for more info.",
                  "code": "VALIDATION_FAILED",
                  "details": [
                    {
                      "path": ".name",
                      "code": "maxLength",
                      "message": "should NOT be longer than 10 characters",
                      "info": { "limit": 10 }
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The rate limit has been reached. Please try again later.",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 429,
                  "name": "TooManyRequests",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error. If this persists, please contact support",
            "headers": {
              "X-Ratelimit-Limit": {
                "description": "Number of requests available for this application.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Remaining": {
                "description": "Number of requests remaining in quota.",
                "schema": { "type": "number" }
              },
              "X-Ratelimit-Reset": {
                "description": "The timestamp when the quota will reset.",
                "schema": { "type": "number" }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "name": "InternalServerError",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-explorer-enabled": false,
  "x-samples-enabled": true,
  "x-samples-languages": ["curl", "node", "go", "ruby", "python", "php"],
  "x-headers": [{ "key": "Authorization", "value": "Bearer <Your api key>" }]
}
